
ENC28J60.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  00001648  000016dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001648  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000065f  00800156  00800156  00001732  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001732  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001764  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000017a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fa6  00000000  00000000  000018f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003df  00000000  00000000  00003896  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001481  00000000  00000000  00003c75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000500  00000000  00000000  000050f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000946  00000000  00000000  000055f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001fec  00000000  00000000  00005f3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00007f2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__vector_7>
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 7e 08 	jmp	0x10fc	; 0x10fc <__vector_13>
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	0c 94 cf 0a 	jmp	0x159e	; 0x159e <__vector_30>
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 e4       	ldi	r30, 0x48	; 72
      a0:	f6 e1       	ldi	r31, 0x16	; 22
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 35       	cpi	r26, 0x56	; 86
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	27 e0       	ldi	r18, 0x07	; 7
      b4:	a6 e5       	ldi	r26, 0x56	; 86
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a5 3b       	cpi	r26, 0xB5	; 181
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 87 09 	call	0x130e	; 0x130e <main>
      c6:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <_Z11serial_initv>:
	{
		result[x] = TCP_IP_packet[x];
	}
	
	
}
      cc:	88 e1       	ldi	r24, 0x18	; 24
      ce:	80 93 9a 00 	sts	0x009A, r24
      d2:	86 e0       	ldi	r24, 0x06	; 6
      d4:	80 93 9d 00 	sts	0x009D, r24
      d8:	10 92 98 00 	sts	0x0098, r1
      dc:	87 e6       	ldi	r24, 0x67	; 103
      de:	80 93 99 00 	sts	0x0099, r24
      e2:	08 95       	ret

000000e4 <_Z11USART_Flushb>:
      e4:	81 11       	cpse	r24, r1
      e6:	03 c0       	rjmp	.+6      	; 0xee <_Z11USART_Flushb+0xa>
      e8:	5f 99       	sbic	0x0b, 7	; 11
      ea:	0e c0       	rjmp	.+28     	; 0x108 <_Z11USART_Flushb+0x24>
      ec:	08 95       	ret
      ee:	80 91 9b 00 	lds	r24, 0x009B
      f2:	88 23       	and	r24, r24
      f4:	64 f4       	brge	.+24     	; 0x10e <_Z11USART_Flushb+0x2a>
      f6:	ac e9       	ldi	r26, 0x9C	; 156
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	eb e9       	ldi	r30, 0x9B	; 155
      fc:	f0 e0       	ldi	r31, 0x00	; 0
      fe:	8c 91       	ld	r24, X
     100:	80 81       	ld	r24, Z
     102:	88 23       	and	r24, r24
     104:	e4 f3       	brlt	.-8      	; 0xfe <_Z11USART_Flushb+0x1a>
     106:	08 95       	ret
     108:	8c b1       	in	r24, 0x0c	; 12
     10a:	5f 99       	sbic	0x0b, 7	; 11
     10c:	fd cf       	rjmp	.-6      	; 0x108 <_Z11USART_Flushb+0x24>
     10e:	08 95       	ret

00000110 <_Z8checksumPcjj>:
     110:	ef 92       	push	r14
     112:	ff 92       	push	r15
     114:	0f 93       	push	r16
     116:	1f 93       	push	r17
     118:	cf 93       	push	r28
     11a:	df 93       	push	r29
     11c:	ec 01       	movw	r28, r24
     11e:	46 17       	cp	r20, r22
     120:	57 07       	cpc	r21, r23
     122:	08 f4       	brcc	.+2      	; 0x126 <_Z8checksumPcjj+0x16>
     124:	3f c0       	rjmp	.+126    	; 0x1a4 <_Z8checksumPcjj+0x94>
     126:	fb 01       	movw	r30, r22
     128:	31 96       	adiw	r30, 0x01	; 1
     12a:	e8 0f       	add	r30, r24
     12c:	f9 1f       	adc	r31, r25
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	dc 01       	movw	r26, r24
     134:	7e 01       	movw	r14, r28
     136:	e4 0e       	add	r14, r20
     138:	f5 1e       	adc	r15, r21
     13a:	64 17       	cp	r22, r20
     13c:	75 07       	cpc	r23, r21
     13e:	51 f4       	brne	.+20     	; 0x154 <_Z8checksumPcjj+0x44>
     140:	e7 01       	movw	r28, r14
     142:	28 81       	ld	r18, Y
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	32 2f       	mov	r19, r18
     148:	22 27       	eor	r18, r18
     14a:	82 0f       	add	r24, r18
     14c:	93 1f       	adc	r25, r19
     14e:	a1 1d       	adc	r26, r1
     150:	b1 1d       	adc	r27, r1
     152:	0c c0       	rjmp	.+24     	; 0x16c <_Z8checksumPcjj+0x5c>
     154:	ef 01       	movw	r28, r30
     156:	21 97       	sbiw	r28, 0x01	; 1
     158:	28 81       	ld	r18, Y
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	32 2f       	mov	r19, r18
     15e:	22 27       	eor	r18, r18
     160:	10 81       	ld	r17, Z
     162:	21 2b       	or	r18, r17
     164:	82 0f       	add	r24, r18
     166:	93 1f       	adc	r25, r19
     168:	a1 1d       	adc	r26, r1
     16a:	b1 1d       	adc	r27, r1
     16c:	00 97       	sbiw	r24, 0x00	; 0
     16e:	d1 e0       	ldi	r29, 0x01	; 1
     170:	ad 07       	cpc	r26, r29
     172:	b1 05       	cpc	r27, r1
     174:	80 f0       	brcs	.+32     	; 0x196 <_Z8checksumPcjj+0x86>
     176:	8c 01       	movw	r16, r24
     178:	9d 01       	movw	r18, r26
     17a:	22 27       	eor	r18, r18
     17c:	33 27       	eor	r19, r19
     17e:	cd 01       	movw	r24, r26
     180:	aa 27       	eor	r26, r26
     182:	bb 27       	eor	r27, r27
     184:	80 0f       	add	r24, r16
     186:	91 1f       	adc	r25, r17
     188:	a2 1f       	adc	r26, r18
     18a:	b3 1f       	adc	r27, r19
     18c:	00 97       	sbiw	r24, 0x00	; 0
     18e:	21 e0       	ldi	r18, 0x01	; 1
     190:	a2 07       	cpc	r26, r18
     192:	b1 05       	cpc	r27, r1
     194:	80 f7       	brcc	.-32     	; 0x176 <_Z8checksumPcjj+0x66>
     196:	6e 5f       	subi	r22, 0xFE	; 254
     198:	7f 4f       	sbci	r23, 0xFF	; 255
     19a:	32 96       	adiw	r30, 0x02	; 2
     19c:	46 17       	cp	r20, r22
     19e:	57 07       	cpc	r21, r23
     1a0:	60 f6       	brcc	.-104    	; 0x13a <_Z8checksumPcjj+0x2a>
     1a2:	03 c0       	rjmp	.+6      	; 0x1aa <_Z8checksumPcjj+0x9a>
     1a4:	80 e0       	ldi	r24, 0x00	; 0
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	dc 01       	movw	r26, r24
     1aa:	80 95       	com	r24
     1ac:	90 95       	com	r25
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	1f 91       	pop	r17
     1b4:	0f 91       	pop	r16
     1b6:	ff 90       	pop	r15
     1b8:	ef 90       	pop	r14
     1ba:	08 95       	ret

000001bc <_Z14ENC_MasterInitv>:
     1bc:	87 b3       	in	r24, 0x17	; 23
     1be:	87 60       	ori	r24, 0x07	; 7
     1c0:	87 bb       	out	0x17, r24	; 23
     1c2:	80 e5       	ldi	r24, 0x50	; 80
     1c4:	8d b9       	out	0x0d, r24	; 13
     1c6:	08 95       	ret

000001c8 <_Z9ENC_Writec>:
     1c8:	c0 9a       	sbi	0x18, 0	; 24
     1ca:	ef e9       	ldi	r30, 0x9F	; 159
     1cc:	ff e0       	ldi	r31, 0x0F	; 15
     1ce:	31 97       	sbiw	r30, 0x01	; 1
     1d0:	f1 f7       	brne	.-4      	; 0x1ce <_Z9ENC_Writec+0x6>
     1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <_Z9ENC_Writec+0xc>
     1d4:	00 00       	nop
     1d6:	c0 98       	cbi	0x18, 0	; 24
     1d8:	8f b9       	out	0x0f, r24	; 15
     1da:	77 9b       	sbis	0x0e, 7	; 14
     1dc:	fe cf       	rjmp	.-4      	; 0x1da <_Z9ENC_Writec+0x12>
     1de:	c0 9a       	sbi	0x18, 0	; 24
     1e0:	08 95       	ret

000001e2 <_Z16ENC_Double_Writecc>:
     1e2:	c0 9a       	sbi	0x18, 0	; 24
     1e4:	ef e9       	ldi	r30, 0x9F	; 159
     1e6:	ff e0       	ldi	r31, 0x0F	; 15
     1e8:	31 97       	sbiw	r30, 0x01	; 1
     1ea:	f1 f7       	brne	.-4      	; 0x1e8 <_Z16ENC_Double_Writecc+0x6>
     1ec:	00 c0       	rjmp	.+0      	; 0x1ee <_Z16ENC_Double_Writecc+0xc>
     1ee:	00 00       	nop
     1f0:	c0 98       	cbi	0x18, 0	; 24
     1f2:	8f b9       	out	0x0f, r24	; 15
     1f4:	77 9b       	sbis	0x0e, 7	; 14
     1f6:	fe cf       	rjmp	.-4      	; 0x1f4 <_Z16ENC_Double_Writecc+0x12>
     1f8:	6f b9       	out	0x0f, r22	; 15
     1fa:	77 9b       	sbis	0x0e, 7	; 14
     1fc:	fe cf       	rjmp	.-4      	; 0x1fa <_Z16ENC_Double_Writecc+0x18>
     1fe:	c0 9a       	sbi	0x18, 0	; 24
     200:	08 95       	ret

00000202 <_Z20ENC_Continuous_Writec>:
     202:	8f b9       	out	0x0f, r24	; 15
     204:	77 9b       	sbis	0x0e, 7	; 14
     206:	fe cf       	rjmp	.-4      	; 0x204 <_Z20ENC_Continuous_Writec+0x2>
     208:	08 95       	ret

0000020a <_Z19ENC_Continuous_Readv>:
     20a:	8f ef       	ldi	r24, 0xFF	; 255
     20c:	8f b9       	out	0x0f, r24	; 15
     20e:	77 9b       	sbis	0x0e, 7	; 14
     210:	fe cf       	rjmp	.-4      	; 0x20e <_Z19ENC_Continuous_Readv+0x4>
     212:	8f b1       	in	r24, 0x0f	; 15
     214:	08 95       	ret

00000216 <_Z18ENC_Write_and_Readc>:
     216:	c0 9a       	sbi	0x18, 0	; 24
     218:	ef e9       	ldi	r30, 0x9F	; 159
     21a:	ff e0       	ldi	r31, 0x0F	; 15
     21c:	31 97       	sbiw	r30, 0x01	; 1
     21e:	f1 f7       	brne	.-4      	; 0x21c <_Z18ENC_Write_and_Readc+0x6>
     220:	00 c0       	rjmp	.+0      	; 0x222 <_Z18ENC_Write_and_Readc+0xc>
     222:	00 00       	nop
     224:	c0 98       	cbi	0x18, 0	; 24
     226:	8f b9       	out	0x0f, r24	; 15
     228:	77 9b       	sbis	0x0e, 7	; 14
     22a:	fe cf       	rjmp	.-4      	; 0x228 <_Z18ENC_Write_and_Readc+0x12>
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	8f b9       	out	0x0f, r24	; 15
     230:	77 9b       	sbis	0x0e, 7	; 14
     232:	fe cf       	rjmp	.-4      	; 0x230 <_Z18ENC_Write_and_Readc+0x1a>
     234:	8f b1       	in	r24, 0x0f	; 15
     236:	c0 9a       	sbi	0x18, 0	; 24
     238:	08 95       	ret

0000023a <_Z9PHY_Writeccc>:
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	18 2f       	mov	r17, r24
     242:	c6 2f       	mov	r28, r22
     244:	d4 2f       	mov	r29, r20
     246:	62 e0       	ldi	r22, 0x02	; 2
     248:	8f e5       	ldi	r24, 0x5F	; 95
     24a:	cb df       	rcall	.-106    	; 0x1e2 <_Z16ENC_Double_Writecc>
     24c:	61 2f       	mov	r22, r17
     24e:	84 e5       	ldi	r24, 0x54	; 84
     250:	c8 df       	rcall	.-112    	; 0x1e2 <_Z16ENC_Double_Writecc>
     252:	6d 2f       	mov	r22, r29
     254:	86 e5       	ldi	r24, 0x56	; 86
     256:	c5 df       	rcall	.-118    	; 0x1e2 <_Z16ENC_Double_Writecc>
     258:	6c 2f       	mov	r22, r28
     25a:	87 e5       	ldi	r24, 0x57	; 87
     25c:	c2 df       	rcall	.-124    	; 0x1e2 <_Z16ENC_Double_Writecc>
     25e:	8a e3       	ldi	r24, 0x3A	; 58
     260:	8a 95       	dec	r24
     262:	f1 f7       	brne	.-4      	; 0x260 <_Z9PHY_Writeccc+0x26>
     264:	00 c0       	rjmp	.+0      	; 0x266 <_Z9PHY_Writeccc+0x2c>
     266:	63 e0       	ldi	r22, 0x03	; 3
     268:	8f e5       	ldi	r24, 0x5F	; 95
     26a:	bb df       	rcall	.-138    	; 0x1e2 <_Z16ENC_Double_Writecc>
     26c:	8a e0       	ldi	r24, 0x0A	; 10
     26e:	d3 df       	rcall	.-90     	; 0x216 <_Z18ENC_Write_and_Readc>
     270:	80 ff       	sbrs	r24, 0
     272:	04 c0       	rjmp	.+8      	; 0x27c <_Z9PHY_Writeccc+0x42>
     274:	8a e0       	ldi	r24, 0x0A	; 10
     276:	cf df       	rcall	.-98     	; 0x216 <_Z18ENC_Write_and_Readc>
     278:	80 fd       	sbrc	r24, 0
     27a:	fc cf       	rjmp	.-8      	; 0x274 <_Z9PHY_Writeccc+0x3a>
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	1f 91       	pop	r17
     282:	08 95       	ret

00000284 <_Z8ENC_initv>:
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	8f ef       	ldi	r24, 0xFF	; 255
     28a:	9e df       	rcall	.-196    	; 0x1c8 <_Z9ENC_Writec>
     28c:	8f e9       	ldi	r24, 0x9F	; 159
     28e:	9f e0       	ldi	r25, 0x0F	; 15
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <_Z8ENC_initv+0xc>
     294:	00 c0       	rjmp	.+0      	; 0x296 <_Z8ENC_initv+0x12>
     296:	00 00       	nop
     298:	8d e1       	ldi	r24, 0x1D	; 29
     29a:	bd df       	rcall	.-134    	; 0x216 <_Z18ENC_Write_and_Readc>
     29c:	80 fd       	sbrc	r24, 0
     29e:	04 c0       	rjmp	.+8      	; 0x2a8 <_Z8ENC_initv+0x24>
     2a0:	8d e1       	ldi	r24, 0x1D	; 29
     2a2:	b9 df       	rcall	.-142    	; 0x216 <_Z18ENC_Write_and_Readc>
     2a4:	80 ff       	sbrs	r24, 0
     2a6:	fc cf       	rjmp	.-8      	; 0x2a0 <_Z8ENC_initv+0x1c>
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	8f e5       	ldi	r24, 0x5F	; 95
     2ac:	9a df       	rcall	.-204    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2ae:	10 92 b4 07 	sts	0x07B4, r1
     2b2:	10 92 b3 07 	sts	0x07B3, r1
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	88 e4       	ldi	r24, 0x48	; 72
     2ba:	93 df       	rcall	.-218    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	89 e4       	ldi	r24, 0x49	; 73
     2c0:	90 df       	rcall	.-224    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2c2:	60 e7       	ldi	r22, 0x70	; 112
     2c4:	8a e4       	ldi	r24, 0x4A	; 74
     2c6:	8d df       	rcall	.-230    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2c8:	67 e1       	ldi	r22, 0x17	; 23
     2ca:	8b e4       	ldi	r24, 0x4B	; 75
     2cc:	8a df       	rcall	.-236    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2ce:	6f e6       	ldi	r22, 0x6F	; 111
     2d0:	8c e4       	ldi	r24, 0x4C	; 76
     2d2:	87 df       	rcall	.-242    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2d4:	67 e1       	ldi	r22, 0x17	; 23
     2d6:	8d e4       	ldi	r24, 0x4D	; 77
     2d8:	84 df       	rcall	.-248    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2da:	61 e0       	ldi	r22, 0x01	; 1
     2dc:	8f e5       	ldi	r24, 0x5F	; 95
     2de:	81 df       	rcall	.-254    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2e0:	61 e8       	ldi	r22, 0x81	; 129
     2e2:	88 e5       	ldi	r24, 0x58	; 88
     2e4:	7e df       	rcall	.-260    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2e6:	8d e1       	ldi	r24, 0x1D	; 29
     2e8:	96 df       	rcall	.-212    	; 0x216 <_Z18ENC_Write_and_Readc>
     2ea:	80 fd       	sbrc	r24, 0
     2ec:	04 c0       	rjmp	.+8      	; 0x2f6 <_Z8ENC_initv+0x72>
     2ee:	8d e1       	ldi	r24, 0x1D	; 29
     2f0:	92 df       	rcall	.-220    	; 0x216 <_Z18ENC_Write_and_Readc>
     2f2:	80 ff       	sbrs	r24, 0
     2f4:	fc cf       	rjmp	.-8      	; 0x2ee <_Z8ENC_initv+0x6a>
     2f6:	62 e0       	ldi	r22, 0x02	; 2
     2f8:	8f e5       	ldi	r24, 0x5F	; 95
     2fa:	73 df       	rcall	.-282    	; 0x1e2 <_Z16ENC_Double_Writecc>
     2fc:	6d e0       	ldi	r22, 0x0D	; 13
     2fe:	80 e4       	ldi	r24, 0x40	; 64
     300:	70 df       	rcall	.-288    	; 0x1e2 <_Z16ENC_Double_Writecc>
     302:	63 e3       	ldi	r22, 0x33	; 51
     304:	82 e4       	ldi	r24, 0x42	; 66
     306:	6d df       	rcall	.-294    	; 0x1e2 <_Z16ENC_Double_Writecc>
     308:	6e ee       	ldi	r22, 0xEE	; 238
     30a:	8a e4       	ldi	r24, 0x4A	; 74
     30c:	6a df       	rcall	.-300    	; 0x1e2 <_Z16ENC_Double_Writecc>
     30e:	65 e0       	ldi	r22, 0x05	; 5
     310:	8b e4       	ldi	r24, 0x4B	; 75
     312:	67 df       	rcall	.-306    	; 0x1e2 <_Z16ENC_Double_Writecc>
     314:	65 e1       	ldi	r22, 0x15	; 21
     316:	84 e4       	ldi	r24, 0x44	; 68
     318:	64 df       	rcall	.-312    	; 0x1e2 <_Z16ENC_Double_Writecc>
     31a:	62 e1       	ldi	r22, 0x12	; 18
     31c:	86 e4       	ldi	r24, 0x46	; 70
     31e:	61 df       	rcall	.-318    	; 0x1e2 <_Z16ENC_Double_Writecc>
     320:	63 e0       	ldi	r22, 0x03	; 3
     322:	8f e5       	ldi	r24, 0x5F	; 95
     324:	5e df       	rcall	.-324    	; 0x1e2 <_Z16ENC_Double_Writecc>
     326:	c5 e1       	ldi	r28, 0x15	; 21
     328:	d1 e0       	ldi	r29, 0x01	; 1
     32a:	68 81       	ld	r22, Y
     32c:	84 e4       	ldi	r24, 0x44	; 68
     32e:	59 df       	rcall	.-334    	; 0x1e2 <_Z16ENC_Double_Writecc>
     330:	69 81       	ldd	r22, Y+1	; 0x01
     332:	85 e4       	ldi	r24, 0x45	; 69
     334:	56 df       	rcall	.-340    	; 0x1e2 <_Z16ENC_Double_Writecc>
     336:	6a 81       	ldd	r22, Y+2	; 0x02
     338:	82 e4       	ldi	r24, 0x42	; 66
     33a:	53 df       	rcall	.-346    	; 0x1e2 <_Z16ENC_Double_Writecc>
     33c:	6b 81       	ldd	r22, Y+3	; 0x03
     33e:	83 e4       	ldi	r24, 0x43	; 67
     340:	50 df       	rcall	.-352    	; 0x1e2 <_Z16ENC_Double_Writecc>
     342:	6c 81       	ldd	r22, Y+4	; 0x04
     344:	80 e4       	ldi	r24, 0x40	; 64
     346:	4d df       	rcall	.-358    	; 0x1e2 <_Z16ENC_Double_Writecc>
     348:	6d 81       	ldd	r22, Y+5	; 0x05
     34a:	81 e4       	ldi	r24, 0x41	; 65
     34c:	4a df       	rcall	.-364    	; 0x1e2 <_Z16ENC_Double_Writecc>
     34e:	60 e8       	ldi	r22, 0x80	; 128
     350:	8e e5       	ldi	r24, 0x5E	; 94
     352:	47 df       	rcall	.-370    	; 0x1e2 <_Z16ENC_Double_Writecc>
     354:	60 ec       	ldi	r22, 0xC0	; 192
     356:	8b e5       	ldi	r24, 0x5B	; 91
     358:	44 df       	rcall	.-376    	; 0x1e2 <_Z16ENC_Double_Writecc>
     35a:	40 e0       	ldi	r20, 0x00	; 0
     35c:	61 e0       	ldi	r22, 0x01	; 1
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	6c df       	rcall	.-296    	; 0x23a <_Z9PHY_Writeccc>
     362:	46 e7       	ldi	r20, 0x76	; 118
     364:	65 e1       	ldi	r22, 0x15	; 21
     366:	84 e1       	ldi	r24, 0x14	; 20
     368:	68 df       	rcall	.-304    	; 0x23a <_Z9PHY_Writeccc>
     36a:	64 e0       	ldi	r22, 0x04	; 4
     36c:	8f e5       	ldi	r24, 0x5F	; 95
     36e:	39 df       	rcall	.-398    	; 0x1e2 <_Z16ENC_Double_Writecc>
     370:	df 91       	pop	r29
     372:	cf 91       	pop	r28
     374:	08 95       	ret

00000376 <_Z11ENC_ReceivePc>:
     376:	af 92       	push	r10
     378:	bf 92       	push	r11
     37a:	cf 92       	push	r12
     37c:	df 92       	push	r13
     37e:	ef 92       	push	r14
     380:	ff 92       	push	r15
     382:	0f 93       	push	r16
     384:	1f 93       	push	r17
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
     38a:	7c 01       	movw	r14, r24
     38c:	64 e0       	ldi	r22, 0x04	; 4
     38e:	8f e5       	ldi	r24, 0x5F	; 95
     390:	28 df       	rcall	.-432    	; 0x1e2 <_Z16ENC_Double_Writecc>
     392:	60 91 b3 07 	lds	r22, 0x07B3
     396:	a0 90 b4 07 	lds	r10, 0x07B4
     39a:	80 e1       	ldi	r24, 0x10	; 16
     39c:	a8 9e       	mul	r10, r24
     39e:	50 01       	movw	r10, r0
     3a0:	11 24       	eor	r1, r1
     3a2:	a6 2a       	or	r10, r22
     3a4:	80 e4       	ldi	r24, 0x40	; 64
     3a6:	1d df       	rcall	.-454    	; 0x1e2 <_Z16ENC_Double_Writecc>
     3a8:	60 91 b4 07 	lds	r22, 0x07B4
     3ac:	81 e4       	ldi	r24, 0x41	; 65
     3ae:	19 df       	rcall	.-462    	; 0x1e2 <_Z16ENC_Double_Writecc>
     3b0:	c0 9a       	sbi	0x18, 0	; 24
     3b2:	8f e9       	ldi	r24, 0x9F	; 159
     3b4:	9f e0       	ldi	r25, 0x0F	; 15
     3b6:	01 97       	sbiw	r24, 0x01	; 1
     3b8:	f1 f7       	brne	.-4      	; 0x3b6 <_Z11ENC_ReceivePc+0x40>
     3ba:	00 c0       	rjmp	.+0      	; 0x3bc <_Z11ENC_ReceivePc+0x46>
     3bc:	00 00       	nop
     3be:	c0 98       	cbi	0x18, 0	; 24
     3c0:	8a e3       	ldi	r24, 0x3A	; 58
     3c2:	1f df       	rcall	.-450    	; 0x202 <_Z20ENC_Continuous_Writec>
     3c4:	22 df       	rcall	.-444    	; 0x20a <_Z19ENC_Continuous_Readv>
     3c6:	80 93 b3 07 	sts	0x07B3, r24
     3ca:	1f df       	rcall	.-450    	; 0x20a <_Z19ENC_Continuous_Readv>
     3cc:	80 93 b4 07 	sts	0x07B4, r24
     3d0:	90 e1       	ldi	r25, 0x10	; 16
     3d2:	89 9f       	mul	r24, r25
     3d4:	60 01       	movw	r12, r0
     3d6:	11 24       	eor	r1, r1
     3d8:	80 91 b3 07 	lds	r24, 0x07B3
     3dc:	c8 2a       	or	r12, r24
     3de:	15 df       	rcall	.-470    	; 0x20a <_Z19ENC_Continuous_Readv>
     3e0:	08 2f       	mov	r16, r24
     3e2:	13 df       	rcall	.-474    	; 0x20a <_Z19ENC_Continuous_Readv>
     3e4:	10 e0       	ldi	r17, 0x00	; 0
     3e6:	10 2f       	mov	r17, r16
     3e8:	00 27       	eor	r16, r16
     3ea:	08 2b       	or	r16, r24
     3ec:	10 27       	eor	r17, r16
     3ee:	01 27       	eor	r16, r17
     3f0:	10 27       	eor	r17, r16
     3f2:	04 50       	subi	r16, 0x04	; 4
     3f4:	11 09       	sbc	r17, r1
     3f6:	09 df       	rcall	.-494    	; 0x20a <_Z19ENC_Continuous_Readv>
     3f8:	08 df       	rcall	.-496    	; 0x20a <_Z19ENC_Continuous_Readv>
     3fa:	05 3f       	cpi	r16, 0xF5	; 245
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	18 07       	cpc	r17, r24
     400:	10 f0       	brcs	.+4      	; 0x406 <_Z11ENC_ReceivePc+0x90>
     402:	04 ef       	ldi	r16, 0xF4	; 244
     404:	11 e0       	ldi	r17, 0x01	; 1
     406:	01 15       	cp	r16, r1
     408:	11 05       	cpc	r17, r1
     40a:	41 f0       	breq	.+16     	; 0x41c <_Z11ENC_ReceivePc+0xa6>
     40c:	e7 01       	movw	r28, r14
     40e:	e0 0e       	add	r14, r16
     410:	f1 1e       	adc	r15, r17
     412:	fb de       	rcall	.-522    	; 0x20a <_Z19ENC_Continuous_Readv>
     414:	89 93       	st	Y+, r24
     416:	ce 15       	cp	r28, r14
     418:	df 05       	cpc	r29, r15
     41a:	d9 f7       	brne	.-10     	; 0x412 <_Z11ENC_ReceivePc+0x9c>
     41c:	c0 9a       	sbi	0x18, 0	; 24
     41e:	ca 14       	cp	r12, r10
     420:	db 04       	cpc	r13, r11
     422:	10 f4       	brcc	.+4      	; 0x428 <_Z11ENC_ReceivePc+0xb2>
     424:	2f df       	rcall	.-418    	; 0x284 <_Z8ENC_initv>
     426:	0a c0       	rjmp	.+20     	; 0x43c <_Z11ENC_ReceivePc+0xc6>
     428:	60 91 b3 07 	lds	r22, 0x07B3
     42c:	61 50       	subi	r22, 0x01	; 1
     42e:	8c e4       	ldi	r24, 0x4C	; 76
     430:	d8 de       	rcall	.-592    	; 0x1e2 <_Z16ENC_Double_Writecc>
     432:	60 91 b4 07 	lds	r22, 0x07B4
     436:	61 50       	subi	r22, 0x01	; 1
     438:	8d e4       	ldi	r24, 0x4D	; 77
     43a:	d3 de       	rcall	.-602    	; 0x1e2 <_Z16ENC_Double_Writecc>
     43c:	60 ec       	ldi	r22, 0xC0	; 192
     43e:	8e e5       	ldi	r24, 0x5E	; 94
     440:	d0 de       	rcall	.-608    	; 0x1e2 <_Z16ENC_Double_Writecc>
     442:	c8 01       	movw	r24, r16
     444:	df 91       	pop	r29
     446:	cf 91       	pop	r28
     448:	1f 91       	pop	r17
     44a:	0f 91       	pop	r16
     44c:	ff 90       	pop	r15
     44e:	ef 90       	pop	r14
     450:	df 90       	pop	r13
     452:	cf 90       	pop	r12
     454:	bf 90       	pop	r11
     456:	af 90       	pop	r10
     458:	08 95       	ret

0000045a <_Z12ENC_TransmitPcjc>:
     45a:	bf 92       	push	r11
     45c:	cf 92       	push	r12
     45e:	df 92       	push	r13
     460:	ef 92       	push	r14
     462:	ff 92       	push	r15
     464:	0f 93       	push	r16
     466:	1f 93       	push	r17
     468:	cf 93       	push	r28
     46a:	df 93       	push	r29
     46c:	8c 01       	movw	r16, r24
     46e:	7b 01       	movw	r14, r22
     470:	b4 2e       	mov	r11, r20
     472:	64 e0       	ldi	r22, 0x04	; 4
     474:	8f e5       	ldi	r24, 0x5F	; 95
     476:	b5 de       	rcall	.-662    	; 0x1e2 <_Z16ENC_Double_Writecc>
     478:	61 e7       	ldi	r22, 0x71	; 113
     47a:	84 e4       	ldi	r24, 0x44	; 68
     47c:	b2 de       	rcall	.-668    	; 0x1e2 <_Z16ENC_Double_Writecc>
     47e:	67 e1       	ldi	r22, 0x17	; 23
     480:	85 e4       	ldi	r24, 0x45	; 69
     482:	af de       	rcall	.-674    	; 0x1e2 <_Z16ENC_Double_Writecc>
     484:	61 e7       	ldi	r22, 0x71	; 113
     486:	82 e4       	ldi	r24, 0x42	; 66
     488:	ac de       	rcall	.-680    	; 0x1e2 <_Z16ENC_Double_Writecc>
     48a:	67 e1       	ldi	r22, 0x17	; 23
     48c:	83 e4       	ldi	r24, 0x43	; 67
     48e:	a9 de       	rcall	.-686    	; 0x1e2 <_Z16ENC_Double_Writecc>
     490:	c0 98       	cbi	0x18, 0	; 24
     492:	8a e7       	ldi	r24, 0x7A	; 122
     494:	b6 de       	rcall	.-660    	; 0x202 <_Z20ENC_Continuous_Writec>
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	b4 de       	rcall	.-664    	; 0x202 <_Z20ENC_Continuous_Writec>
     49a:	cf e0       	ldi	r28, 0x0F	; 15
     49c:	d1 e0       	ldi	r29, 0x01	; 1
     49e:	0f 2e       	mov	r0, r31
     4a0:	f5 e1       	ldi	r31, 0x15	; 21
     4a2:	cf 2e       	mov	r12, r31
     4a4:	f1 e0       	ldi	r31, 0x01	; 1
     4a6:	df 2e       	mov	r13, r31
     4a8:	f0 2d       	mov	r31, r0
     4aa:	89 91       	ld	r24, Y+
     4ac:	aa de       	rcall	.-684    	; 0x202 <_Z20ENC_Continuous_Writec>
     4ae:	cc 15       	cp	r28, r12
     4b0:	dd 05       	cpc	r29, r13
     4b2:	d9 f7       	brne	.-10     	; 0x4aa <_Z12ENC_TransmitPcjc+0x50>
     4b4:	c5 e1       	ldi	r28, 0x15	; 21
     4b6:	d1 e0       	ldi	r29, 0x01	; 1
     4b8:	0f 2e       	mov	r0, r31
     4ba:	fb e1       	ldi	r31, 0x1B	; 27
     4bc:	cf 2e       	mov	r12, r31
     4be:	f1 e0       	ldi	r31, 0x01	; 1
     4c0:	df 2e       	mov	r13, r31
     4c2:	f0 2d       	mov	r31, r0
     4c4:	89 91       	ld	r24, Y+
     4c6:	9d de       	rcall	.-710    	; 0x202 <_Z20ENC_Continuous_Writec>
     4c8:	cc 15       	cp	r28, r12
     4ca:	dd 05       	cpc	r29, r13
     4cc:	d9 f7       	brne	.-10     	; 0x4c4 <_Z12ENC_TransmitPcjc+0x6a>
     4ce:	89 e4       	ldi	r24, 0x49	; 73
     4d0:	b8 12       	cpse	r11, r24
     4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <_Z12ENC_TransmitPcjc+0x8a>
     4d4:	88 e0       	ldi	r24, 0x08	; 8
     4d6:	95 de       	rcall	.-726    	; 0x202 <_Z20ENC_Continuous_Writec>
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	93 de       	rcall	.-730    	; 0x202 <_Z20ENC_Continuous_Writec>
     4dc:	e1 14       	cp	r14, r1
     4de:	f1 04       	cpc	r15, r1
     4e0:	49 f4       	brne	.+18     	; 0x4f4 <_Z12ENC_TransmitPcjc+0x9a>
     4e2:	10 c0       	rjmp	.+32     	; 0x504 <_Z12ENC_TransmitPcjc+0xaa>
     4e4:	81 e4       	ldi	r24, 0x41	; 65
     4e6:	b8 12       	cpse	r11, r24
     4e8:	f9 cf       	rjmp	.-14     	; 0x4dc <_Z12ENC_TransmitPcjc+0x82>
     4ea:	88 e0       	ldi	r24, 0x08	; 8
     4ec:	8a de       	rcall	.-748    	; 0x202 <_Z20ENC_Continuous_Writec>
     4ee:	86 e0       	ldi	r24, 0x06	; 6
     4f0:	88 de       	rcall	.-752    	; 0x202 <_Z20ENC_Continuous_Writec>
     4f2:	f4 cf       	rjmp	.-24     	; 0x4dc <_Z12ENC_TransmitPcjc+0x82>
     4f4:	e8 01       	movw	r28, r16
     4f6:	0e 0d       	add	r16, r14
     4f8:	1f 1d       	adc	r17, r15
     4fa:	89 91       	ld	r24, Y+
     4fc:	82 de       	rcall	.-764    	; 0x202 <_Z20ENC_Continuous_Writec>
     4fe:	c0 17       	cp	r28, r16
     500:	d1 07       	cpc	r29, r17
     502:	d9 f7       	brne	.-10     	; 0x4fa <_Z12ENC_TransmitPcjc+0xa0>
     504:	81 e8       	ldi	r24, 0x81	; 129
     506:	e8 1a       	sub	r14, r24
     508:	88 ee       	ldi	r24, 0xE8	; 232
     50a:	f8 0a       	sbc	r15, r24
     50c:	6e 2d       	mov	r22, r14
     50e:	86 e4       	ldi	r24, 0x46	; 70
     510:	68 de       	rcall	.-816    	; 0x1e2 <_Z16ENC_Double_Writecc>
     512:	6f 2d       	mov	r22, r15
     514:	87 e4       	ldi	r24, 0x47	; 71
     516:	65 de       	rcall	.-822    	; 0x1e2 <_Z16ENC_Double_Writecc>
     518:	60 e0       	ldi	r22, 0x00	; 0
     51a:	8c e5       	ldi	r24, 0x5C	; 92
     51c:	62 de       	rcall	.-828    	; 0x1e2 <_Z16ENC_Double_Writecc>
     51e:	68 e8       	ldi	r22, 0x88	; 136
     520:	8b e5       	ldi	r24, 0x5B	; 91
     522:	5f de       	rcall	.-834    	; 0x1e2 <_Z16ENC_Double_Writecc>
     524:	6c e1       	ldi	r22, 0x1C	; 28
     526:	8f e5       	ldi	r24, 0x5F	; 95
     528:	5c de       	rcall	.-840    	; 0x1e2 <_Z16ENC_Double_Writecc>
     52a:	8f e1       	ldi	r24, 0x1F	; 31
     52c:	74 de       	rcall	.-792    	; 0x216 <_Z18ENC_Write_and_Readc>
     52e:	83 ff       	sbrs	r24, 3
     530:	04 c0       	rjmp	.+8      	; 0x53a <_Z12ENC_TransmitPcjc+0xe0>
     532:	8f e1       	ldi	r24, 0x1F	; 31
     534:	70 de       	rcall	.-800    	; 0x216 <_Z18ENC_Write_and_Readc>
     536:	83 fd       	sbrc	r24, 3
     538:	fc cf       	rjmp	.-8      	; 0x532 <_Z12ENC_TransmitPcjc+0xd8>
     53a:	8d e1       	ldi	r24, 0x1D	; 29
     53c:	6c de       	rcall	.-808    	; 0x216 <_Z18ENC_Write_and_Readc>
     53e:	86 95       	lsr	r24
     540:	81 70       	andi	r24, 0x01	; 1
     542:	91 e0       	ldi	r25, 0x01	; 1
     544:	89 27       	eor	r24, r25
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	1f 91       	pop	r17
     54c:	0f 91       	pop	r16
     54e:	ff 90       	pop	r15
     550:	ef 90       	pop	r14
     552:	df 90       	pop	r13
     554:	cf 90       	pop	r12
     556:	bf 90       	pop	r11
     558:	08 95       	ret

0000055a <_Z9NewPacketv>:
     55a:	65 e0       	ldi	r22, 0x05	; 5
     55c:	8f e5       	ldi	r24, 0x5F	; 95
     55e:	41 de       	rcall	.-894    	; 0x1e2 <_Z16ENC_Double_Writecc>
     560:	89 e1       	ldi	r24, 0x19	; 25
     562:	59 ce       	rjmp	.-846    	; 0x216 <_Z18ENC_Write_and_Readc>
     564:	08 95       	ret

00000566 <_Z15Make_TCP_PacketPcibbb>:
     566:	2f 92       	push	r2
     568:	3f 92       	push	r3
     56a:	4f 92       	push	r4
     56c:	5f 92       	push	r5
     56e:	6f 92       	push	r6
     570:	7f 92       	push	r7
     572:	8f 92       	push	r8
     574:	9f 92       	push	r9
     576:	af 92       	push	r10
     578:	bf 92       	push	r11
     57a:	cf 92       	push	r12
     57c:	df 92       	push	r13
     57e:	ef 92       	push	r14
     580:	ff 92       	push	r15
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	cd b7       	in	r28, 0x3d	; 61
     58c:	de b7       	in	r29, 0x3e	; 62
     58e:	c5 53       	subi	r28, 0x35	; 53
     590:	d8 40       	sbci	r29, 0x08	; 8
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	f8 94       	cli
     596:	de bf       	out	0x3e, r29	; 62
     598:	0f be       	out	0x3f, r0	; 63
     59a:	cd bf       	out	0x3d, r28	; 61
     59c:	28 2e       	mov	r2, r24
     59e:	cb 5c       	subi	r28, 0xCB	; 203
     5a0:	d7 4f       	sbci	r29, 0xF7	; 247
     5a2:	98 83       	st	Y, r25
     5a4:	c5 53       	subi	r28, 0x35	; 53
     5a6:	d8 40       	sbci	r29, 0x08	; 8
     5a8:	6b 01       	movw	r12, r22
     5aa:	44 2e       	mov	r4, r20
     5ac:	32 2e       	mov	r3, r18
     5ae:	85 e4       	ldi	r24, 0x45	; 69
     5b0:	c3 52       	subi	r28, 0x23	; 35
     5b2:	da 4f       	sbci	r29, 0xFA	; 250
     5b4:	88 83       	st	Y, r24
     5b6:	cd 5d       	subi	r28, 0xDD	; 221
     5b8:	d5 40       	sbci	r29, 0x05	; 5
     5ba:	c2 52       	subi	r28, 0x22	; 34
     5bc:	da 4f       	sbci	r29, 0xFA	; 250
     5be:	18 82       	st	Y, r1
     5c0:	ce 5d       	subi	r28, 0xDE	; 222
     5c2:	d5 40       	sbci	r29, 0x05	; 5
     5c4:	7b 01       	movw	r14, r22
     5c6:	88 e2       	ldi	r24, 0x28	; 40
     5c8:	e8 0e       	add	r14, r24
     5ca:	f1 1c       	adc	r15, r1
     5cc:	c1 52       	subi	r28, 0x21	; 33
     5ce:	da 4f       	sbci	r29, 0xFA	; 250
     5d0:	f8 82       	st	Y, r15
     5d2:	cf 5d       	subi	r28, 0xDF	; 223
     5d4:	d5 40       	sbci	r29, 0x05	; 5
     5d6:	88 e2       	ldi	r24, 0x28	; 40
     5d8:	86 0f       	add	r24, r22
     5da:	c0 52       	subi	r28, 0x20	; 32
     5dc:	da 4f       	sbci	r29, 0xFA	; 250
     5de:	88 83       	st	Y, r24
     5e0:	c0 5e       	subi	r28, 0xE0	; 224
     5e2:	d5 40       	sbci	r29, 0x05	; 5
     5e4:	8a e1       	ldi	r24, 0x1A	; 26
     5e6:	cf 51       	subi	r28, 0x1F	; 31
     5e8:	da 4f       	sbci	r29, 0xFA	; 250
     5ea:	88 83       	st	Y, r24
     5ec:	c1 5e       	subi	r28, 0xE1	; 225
     5ee:	d5 40       	sbci	r29, 0x05	; 5
     5f0:	80 e3       	ldi	r24, 0x30	; 48
     5f2:	ce 51       	subi	r28, 0x1E	; 30
     5f4:	da 4f       	sbci	r29, 0xFA	; 250
     5f6:	88 83       	st	Y, r24
     5f8:	c2 5e       	subi	r28, 0xE2	; 226
     5fa:	d5 40       	sbci	r29, 0x05	; 5
     5fc:	cd 51       	subi	r28, 0x1D	; 29
     5fe:	da 4f       	sbci	r29, 0xFA	; 250
     600:	18 82       	st	Y, r1
     602:	c3 5e       	subi	r28, 0xE3	; 227
     604:	d5 40       	sbci	r29, 0x05	; 5
     606:	cc 51       	subi	r28, 0x1C	; 28
     608:	da 4f       	sbci	r29, 0xFA	; 250
     60a:	18 82       	st	Y, r1
     60c:	c4 5e       	subi	r28, 0xE4	; 228
     60e:	d5 40       	sbci	r29, 0x05	; 5
     610:	80 e8       	ldi	r24, 0x80	; 128
     612:	cb 51       	subi	r28, 0x1B	; 27
     614:	da 4f       	sbci	r29, 0xFA	; 250
     616:	88 83       	st	Y, r24
     618:	c5 5e       	subi	r28, 0xE5	; 229
     61a:	d5 40       	sbci	r29, 0x05	; 5
     61c:	86 e0       	ldi	r24, 0x06	; 6
     61e:	ca 51       	subi	r28, 0x1A	; 26
     620:	da 4f       	sbci	r29, 0xFA	; 250
     622:	88 83       	st	Y, r24
     624:	c6 5e       	subi	r28, 0xE6	; 230
     626:	d5 40       	sbci	r29, 0x05	; 5
     628:	c9 51       	subi	r28, 0x19	; 25
     62a:	da 4f       	sbci	r29, 0xFA	; 250
     62c:	18 82       	st	Y, r1
     62e:	c7 5e       	subi	r28, 0xE7	; 231
     630:	d5 40       	sbci	r29, 0x05	; 5
     632:	c8 51       	subi	r28, 0x18	; 24
     634:	da 4f       	sbci	r29, 0xFA	; 250
     636:	18 82       	st	Y, r1
     638:	c8 5e       	subi	r28, 0xE8	; 232
     63a:	d5 40       	sbci	r29, 0x05	; 5
     63c:	e7 e0       	ldi	r30, 0x07	; 7
     63e:	f1 e0       	ldi	r31, 0x01	; 1
     640:	50 80       	ld	r5, Z
     642:	c7 51       	subi	r28, 0x17	; 23
     644:	da 4f       	sbci	r29, 0xFA	; 250
     646:	58 82       	st	Y, r5
     648:	c9 5e       	subi	r28, 0xE9	; 233
     64a:	d5 40       	sbci	r29, 0x05	; 5
     64c:	61 80       	ldd	r6, Z+1	; 0x01
     64e:	c6 51       	subi	r28, 0x16	; 22
     650:	da 4f       	sbci	r29, 0xFA	; 250
     652:	68 82       	st	Y, r6
     654:	ca 5e       	subi	r28, 0xEA	; 234
     656:	d5 40       	sbci	r29, 0x05	; 5
     658:	72 80       	ldd	r7, Z+2	; 0x02
     65a:	c5 51       	subi	r28, 0x15	; 21
     65c:	da 4f       	sbci	r29, 0xFA	; 250
     65e:	78 82       	st	Y, r7
     660:	cb 5e       	subi	r28, 0xEB	; 235
     662:	d5 40       	sbci	r29, 0x05	; 5
     664:	83 80       	ldd	r8, Z+3	; 0x03
     666:	c4 51       	subi	r28, 0x14	; 20
     668:	da 4f       	sbci	r29, 0xFA	; 250
     66a:	88 82       	st	Y, r8
     66c:	cc 5e       	subi	r28, 0xEC	; 236
     66e:	d5 40       	sbci	r29, 0x05	; 5
     670:	eb e0       	ldi	r30, 0x0B	; 11
     672:	f1 e0       	ldi	r31, 0x01	; 1
     674:	90 80       	ld	r9, Z
     676:	c3 51       	subi	r28, 0x13	; 19
     678:	da 4f       	sbci	r29, 0xFA	; 250
     67a:	98 82       	st	Y, r9
     67c:	cd 5e       	subi	r28, 0xED	; 237
     67e:	d5 40       	sbci	r29, 0x05	; 5
     680:	a1 80       	ldd	r10, Z+1	; 0x01
     682:	c2 51       	subi	r28, 0x12	; 18
     684:	da 4f       	sbci	r29, 0xFA	; 250
     686:	a8 82       	st	Y, r10
     688:	ce 5e       	subi	r28, 0xEE	; 238
     68a:	d5 40       	sbci	r29, 0x05	; 5
     68c:	b2 80       	ldd	r11, Z+2	; 0x02
     68e:	c1 51       	subi	r28, 0x11	; 17
     690:	da 4f       	sbci	r29, 0xFA	; 250
     692:	b8 82       	st	Y, r11
     694:	cf 5e       	subi	r28, 0xEF	; 239
     696:	d5 40       	sbci	r29, 0x05	; 5
     698:	13 81       	ldd	r17, Z+3	; 0x03
     69a:	c0 51       	subi	r28, 0x10	; 16
     69c:	da 4f       	sbci	r29, 0xFA	; 250
     69e:	18 83       	st	Y, r17
     6a0:	c0 5f       	subi	r28, 0xF0	; 240
     6a2:	d5 40       	sbci	r29, 0x05	; 5
     6a4:	43 e1       	ldi	r20, 0x13	; 19
     6a6:	50 e0       	ldi	r21, 0x00	; 0
     6a8:	60 e0       	ldi	r22, 0x00	; 0
     6aa:	70 e0       	ldi	r23, 0x00	; 0
     6ac:	ce 01       	movw	r24, r28
     6ae:	83 52       	subi	r24, 0x23	; 35
     6b0:	9a 4f       	sbci	r25, 0xFA	; 250
     6b2:	2e dd       	rcall	.-1444   	; 0x110 <_Z8checksumPcjj>
     6b4:	c9 51       	subi	r28, 0x19	; 25
     6b6:	da 4f       	sbci	r29, 0xFA	; 250
     6b8:	98 83       	st	Y, r25
     6ba:	c7 5e       	subi	r28, 0xE7	; 231
     6bc:	d5 40       	sbci	r29, 0x05	; 5
     6be:	c8 51       	subi	r28, 0x18	; 24
     6c0:	da 4f       	sbci	r29, 0xFA	; 250
     6c2:	88 83       	st	Y, r24
     6c4:	c8 5e       	subi	r28, 0xE8	; 232
     6c6:	d5 40       	sbci	r29, 0x05	; 5
     6c8:	80 91 b2 07 	lds	r24, 0x07B2
     6cc:	cf 50       	subi	r28, 0x0F	; 15
     6ce:	da 4f       	sbci	r29, 0xFA	; 250
     6d0:	88 83       	st	Y, r24
     6d2:	c1 5f       	subi	r28, 0xF1	; 241
     6d4:	d5 40       	sbci	r29, 0x05	; 5
     6d6:	80 91 06 01 	lds	r24, 0x0106
     6da:	ce 50       	subi	r28, 0x0E	; 14
     6dc:	da 4f       	sbci	r29, 0xFA	; 250
     6de:	88 83       	st	Y, r24
     6e0:	c2 5f       	subi	r28, 0xF2	; 242
     6e2:	d5 40       	sbci	r29, 0x05	; 5
     6e4:	80 91 04 01 	lds	r24, 0x0104
     6e8:	90 91 05 01 	lds	r25, 0x0105
     6ec:	cd 50       	subi	r28, 0x0D	; 13
     6ee:	da 4f       	sbci	r29, 0xFA	; 250
     6f0:	98 83       	st	Y, r25
     6f2:	c3 5f       	subi	r28, 0xF3	; 243
     6f4:	d5 40       	sbci	r29, 0x05	; 5
     6f6:	cc 50       	subi	r28, 0x0C	; 12
     6f8:	da 4f       	sbci	r29, 0xFA	; 250
     6fa:	88 83       	st	Y, r24
     6fc:	c4 5f       	subi	r28, 0xF4	; 244
     6fe:	d5 40       	sbci	r29, 0x05	; 5
     700:	80 91 00 01 	lds	r24, 0x0100
     704:	90 91 01 01 	lds	r25, 0x0101
     708:	20 91 02 01 	lds	r18, 0x0102
     70c:	30 91 03 01 	lds	r19, 0x0103
     710:	cb 50       	subi	r28, 0x0B	; 11
     712:	da 4f       	sbci	r29, 0xFA	; 250
     714:	38 83       	st	Y, r19
     716:	c5 5f       	subi	r28, 0xF5	; 245
     718:	d5 40       	sbci	r29, 0x05	; 5
     71a:	ca 50       	subi	r28, 0x0A	; 10
     71c:	da 4f       	sbci	r29, 0xFA	; 250
     71e:	28 83       	st	Y, r18
     720:	c6 5f       	subi	r28, 0xF6	; 246
     722:	d5 40       	sbci	r29, 0x05	; 5
     724:	c9 50       	subi	r28, 0x09	; 9
     726:	da 4f       	sbci	r29, 0xFA	; 250
     728:	98 83       	st	Y, r25
     72a:	c7 5f       	subi	r28, 0xF7	; 247
     72c:	d5 40       	sbci	r29, 0x05	; 5
     72e:	c8 50       	subi	r28, 0x08	; 8
     730:	da 4f       	sbci	r29, 0xFA	; 250
     732:	88 83       	st	Y, r24
     734:	c8 5f       	subi	r28, 0xF8	; 248
     736:	d5 40       	sbci	r29, 0x05	; 5
     738:	80 91 ae 07 	lds	r24, 0x07AE
     73c:	90 91 af 07 	lds	r25, 0x07AF
     740:	20 91 b0 07 	lds	r18, 0x07B0
     744:	30 91 b1 07 	lds	r19, 0x07B1
     748:	c7 50       	subi	r28, 0x07	; 7
     74a:	da 4f       	sbci	r29, 0xFA	; 250
     74c:	38 83       	st	Y, r19
     74e:	c9 5f       	subi	r28, 0xF9	; 249
     750:	d5 40       	sbci	r29, 0x05	; 5
     752:	c6 50       	subi	r28, 0x06	; 6
     754:	da 4f       	sbci	r29, 0xFA	; 250
     756:	28 83       	st	Y, r18
     758:	ca 5f       	subi	r28, 0xFA	; 250
     75a:	d5 40       	sbci	r29, 0x05	; 5
     75c:	c5 50       	subi	r28, 0x05	; 5
     75e:	da 4f       	sbci	r29, 0xFA	; 250
     760:	98 83       	st	Y, r25
     762:	cb 5f       	subi	r28, 0xFB	; 251
     764:	d5 40       	sbci	r29, 0x05	; 5
     766:	c4 50       	subi	r28, 0x04	; 4
     768:	da 4f       	sbci	r29, 0xFA	; 250
     76a:	88 83       	st	Y, r24
     76c:	cc 5f       	subi	r28, 0xFC	; 252
     76e:	d5 40       	sbci	r29, 0x05	; 5
     770:	80 e5       	ldi	r24, 0x50	; 80
     772:	c3 50       	subi	r28, 0x03	; 3
     774:	da 4f       	sbci	r29, 0xFA	; 250
     776:	88 83       	st	Y, r24
     778:	cd 5f       	subi	r28, 0xFD	; 253
     77a:	d5 40       	sbci	r29, 0x05	; 5
     77c:	01 11       	cpse	r16, r1
     77e:	06 c0       	rjmp	.+12     	; 0x78c <_Z15Make_TCP_PacketPcibbb+0x226>
     780:	c2 50       	subi	r28, 0x02	; 2
     782:	da 4f       	sbci	r29, 0xFA	; 250
     784:	18 82       	st	Y, r1
     786:	ce 5f       	subi	r28, 0xFE	; 254
     788:	d5 40       	sbci	r29, 0x05	; 5
     78a:	06 c0       	rjmp	.+12     	; 0x798 <_Z15Make_TCP_PacketPcibbb+0x232>
     78c:	88 e0       	ldi	r24, 0x08	; 8
     78e:	c2 50       	subi	r28, 0x02	; 2
     790:	da 4f       	sbci	r29, 0xFA	; 250
     792:	88 83       	st	Y, r24
     794:	ce 5f       	subi	r28, 0xFE	; 254
     796:	d5 40       	sbci	r29, 0x05	; 5
     798:	44 20       	and	r4, r4
     79a:	59 f0       	breq	.+22     	; 0x7b2 <_Z15Make_TCP_PacketPcibbb+0x24c>
     79c:	c2 50       	subi	r28, 0x02	; 2
     79e:	da 4f       	sbci	r29, 0xFA	; 250
     7a0:	88 81       	ld	r24, Y
     7a2:	ce 5f       	subi	r28, 0xFE	; 254
     7a4:	d5 40       	sbci	r29, 0x05	; 5
     7a6:	82 60       	ori	r24, 0x02	; 2
     7a8:	c2 50       	subi	r28, 0x02	; 2
     7aa:	da 4f       	sbci	r29, 0xFA	; 250
     7ac:	88 83       	st	Y, r24
     7ae:	ce 5f       	subi	r28, 0xFE	; 254
     7b0:	d5 40       	sbci	r29, 0x05	; 5
     7b2:	33 20       	and	r3, r3
     7b4:	59 f0       	breq	.+22     	; 0x7cc <_Z15Make_TCP_PacketPcibbb+0x266>
     7b6:	c2 50       	subi	r28, 0x02	; 2
     7b8:	da 4f       	sbci	r29, 0xFA	; 250
     7ba:	88 81       	ld	r24, Y
     7bc:	ce 5f       	subi	r28, 0xFE	; 254
     7be:	d5 40       	sbci	r29, 0x05	; 5
     7c0:	80 61       	ori	r24, 0x10	; 16
     7c2:	c2 50       	subi	r28, 0x02	; 2
     7c4:	da 4f       	sbci	r29, 0xFA	; 250
     7c6:	88 83       	st	Y, r24
     7c8:	ce 5f       	subi	r28, 0xFE	; 254
     7ca:	d5 40       	sbci	r29, 0x05	; 5
     7cc:	85 e0       	ldi	r24, 0x05	; 5
     7ce:	c1 50       	subi	r28, 0x01	; 1
     7d0:	da 4f       	sbci	r29, 0xFA	; 250
     7d2:	88 83       	st	Y, r24
     7d4:	cf 5f       	subi	r28, 0xFF	; 255
     7d6:	d5 40       	sbci	r29, 0x05	; 5
     7d8:	8c ed       	ldi	r24, 0xDC	; 220
     7da:	c0 50       	subi	r28, 0x00	; 0
     7dc:	da 4f       	sbci	r29, 0xFA	; 250
     7de:	88 83       	st	Y, r24
     7e0:	c0 50       	subi	r28, 0x00	; 0
     7e2:	d6 40       	sbci	r29, 0x06	; 6
     7e4:	cf 5f       	subi	r28, 0xFF	; 255
     7e6:	d9 4f       	sbci	r29, 0xF9	; 249
     7e8:	18 82       	st	Y, r1
     7ea:	c1 50       	subi	r28, 0x01	; 1
     7ec:	d6 40       	sbci	r29, 0x06	; 6
     7ee:	ce 5f       	subi	r28, 0xFE	; 254
     7f0:	d9 4f       	sbci	r29, 0xF9	; 249
     7f2:	18 82       	st	Y, r1
     7f4:	c2 50       	subi	r28, 0x02	; 2
     7f6:	d6 40       	sbci	r29, 0x06	; 6
     7f8:	cd 5f       	subi	r28, 0xFD	; 253
     7fa:	d9 4f       	sbci	r29, 0xF9	; 249
     7fc:	18 82       	st	Y, r1
     7fe:	c3 50       	subi	r28, 0x03	; 3
     800:	d6 40       	sbci	r29, 0x06	; 6
     802:	cc 5f       	subi	r28, 0xFC	; 252
     804:	d9 4f       	sbci	r29, 0xF9	; 249
     806:	18 82       	st	Y, r1
     808:	c4 50       	subi	r28, 0x04	; 4
     80a:	d6 40       	sbci	r29, 0x06	; 6
     80c:	1c 14       	cp	r1, r12
     80e:	1d 04       	cpc	r1, r13
     810:	cc f4       	brge	.+50     	; 0x844 <_Z15Make_TCP_PacketPcibbb+0x2de>
     812:	a2 2d       	mov	r26, r2
     814:	cb 5c       	subi	r28, 0xCB	; 203
     816:	d7 4f       	sbci	r29, 0xF7	; 247
     818:	b8 81       	ld	r27, Y
     81a:	c5 53       	subi	r28, 0x35	; 53
     81c:	d8 40       	sbci	r29, 0x08	; 8
     81e:	ed ed       	ldi	r30, 0xDD	; 221
     820:	f5 e0       	ldi	r31, 0x05	; 5
     822:	ec 0f       	add	r30, r28
     824:	fd 1f       	adc	r31, r29
     826:	b8 96       	adiw	r30, 0x28	; 40
     828:	96 01       	movw	r18, r12
     82a:	28 5d       	subi	r18, 0xD8	; 216
     82c:	3f 4f       	sbci	r19, 0xFF	; 255
     82e:	8d ed       	ldi	r24, 0xDD	; 221
     830:	95 e0       	ldi	r25, 0x05	; 5
     832:	8c 0f       	add	r24, r28
     834:	9d 1f       	adc	r25, r29
     836:	28 0f       	add	r18, r24
     838:	39 1f       	adc	r19, r25
     83a:	8d 91       	ld	r24, X+
     83c:	81 93       	st	Z+, r24
     83e:	e2 17       	cp	r30, r18
     840:	f3 07       	cpc	r31, r19
     842:	d9 f7       	brne	.-10     	; 0x83a <_Z15Make_TCP_PacketPcibbb+0x2d4>
     844:	59 82       	std	Y+1, r5	; 0x01
     846:	6a 82       	std	Y+2, r6	; 0x02
     848:	7b 82       	std	Y+3, r7	; 0x03
     84a:	8c 82       	std	Y+4, r8	; 0x04
     84c:	9d 82       	std	Y+5, r9	; 0x05
     84e:	ae 82       	std	Y+6, r10	; 0x06
     850:	bf 82       	std	Y+7, r11	; 0x07
     852:	18 87       	std	Y+8, r17	; 0x08
     854:	19 86       	std	Y+9, r1	; 0x09
     856:	86 e0       	ldi	r24, 0x06	; 6
     858:	8a 87       	std	Y+10, r24	; 0x0a
     85a:	c6 01       	movw	r24, r12
     85c:	44 96       	adiw	r24, 0x14	; 20
     85e:	9b 87       	std	Y+11, r25	; 0x0b
     860:	24 e1       	ldi	r18, 0x14	; 20
     862:	2c 0d       	add	r18, r12
     864:	2c 87       	std	Y+12, r18	; 0x0c
     866:	89 2b       	or	r24, r25
     868:	a9 f0       	breq	.+42     	; 0x894 <_Z15Make_TCP_PacketPcibbb+0x32e>
     86a:	ed ed       	ldi	r30, 0xDD	; 221
     86c:	f5 e0       	ldi	r31, 0x05	; 5
     86e:	ec 0f       	add	r30, r28
     870:	fd 1f       	adc	r31, r29
     872:	74 96       	adiw	r30, 0x14	; 20
     874:	de 01       	movw	r26, r28
     876:	1d 96       	adiw	r26, 0x0d	; 13
     878:	96 01       	movw	r18, r12
     87a:	28 5d       	subi	r18, 0xD8	; 216
     87c:	3f 4f       	sbci	r19, 0xFF	; 255
     87e:	8d ed       	ldi	r24, 0xDD	; 221
     880:	95 e0       	ldi	r25, 0x05	; 5
     882:	8c 0f       	add	r24, r28
     884:	9d 1f       	adc	r25, r29
     886:	28 0f       	add	r18, r24
     888:	39 1f       	adc	r19, r25
     88a:	81 91       	ld	r24, Z+
     88c:	8d 93       	st	X+, r24
     88e:	e2 17       	cp	r30, r18
     890:	f3 07       	cpc	r31, r19
     892:	d9 f7       	brne	.-10     	; 0x88a <_Z15Make_TCP_PacketPcibbb+0x324>
     894:	a6 01       	movw	r20, r12
     896:	41 5e       	subi	r20, 0xE1	; 225
     898:	5f 4f       	sbci	r21, 0xFF	; 255
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	70 e0       	ldi	r23, 0x00	; 0
     89e:	ce 01       	movw	r24, r28
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	36 dc       	rcall	.-1940   	; 0x110 <_Z8checksumPcjj>
     8a4:	cf 5f       	subi	r28, 0xFF	; 255
     8a6:	d9 4f       	sbci	r29, 0xF9	; 249
     8a8:	98 83       	st	Y, r25
     8aa:	c1 50       	subi	r28, 0x01	; 1
     8ac:	d6 40       	sbci	r29, 0x06	; 6
     8ae:	ce 5f       	subi	r28, 0xFE	; 254
     8b0:	d9 4f       	sbci	r29, 0xF9	; 249
     8b2:	88 83       	st	Y, r24
     8b4:	c2 50       	subi	r28, 0x02	; 2
     8b6:	d6 40       	sbci	r29, 0x06	; 6
     8b8:	49 e4       	ldi	r20, 0x49	; 73
     8ba:	b7 01       	movw	r22, r14
     8bc:	ce 01       	movw	r24, r28
     8be:	83 52       	subi	r24, 0x23	; 35
     8c0:	9a 4f       	sbci	r25, 0xFA	; 250
     8c2:	cb dd       	rcall	.-1130   	; 0x45a <_Z12ENC_TransmitPcjc>
     8c4:	88 23       	and	r24, r24
     8c6:	c1 f3       	breq	.-16     	; 0x8b8 <_Z15Make_TCP_PacketPcibbb+0x352>
     8c8:	33 20       	and	r3, r3
     8ca:	41 f0       	breq	.+16     	; 0x8dc <_Z15Make_TCP_PacketPcibbb+0x376>
     8cc:	41 10       	cpse	r4, r1
     8ce:	0b c0       	rjmp	.+22     	; 0x8e6 <_Z15Make_TCP_PacketPcibbb+0x380>
     8d0:	01 11       	cpse	r16, r1
     8d2:	0e c0       	rjmp	.+28     	; 0x8f0 <_Z15Make_TCP_PacketPcibbb+0x38a>
     8d4:	9c c0       	rjmp	.+312    	; 0xa0e <_Z15Make_TCP_PacketPcibbb+0x4a8>
     8d6:	10 92 4f 05 	sts	0x054F, r1
     8da:	99 c0       	rjmp	.+306    	; 0xa0e <_Z15Make_TCP_PacketPcibbb+0x4a8>
     8dc:	0f 2e       	mov	r0, r31
     8de:	fa e0       	ldi	r31, 0x0A	; 10
     8e0:	bf 2e       	mov	r11, r31
     8e2:	f0 2d       	mov	r31, r0
     8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <_Z15Make_TCP_PacketPcibbb+0x392>
     8e6:	0f 2e       	mov	r0, r31
     8e8:	fa e0       	ldi	r31, 0x0A	; 10
     8ea:	bf 2e       	mov	r11, r31
     8ec:	f0 2d       	mov	r31, r0
     8ee:	04 c0       	rjmp	.+8      	; 0x8f8 <_Z15Make_TCP_PacketPcibbb+0x392>
     8f0:	0f 2e       	mov	r0, r31
     8f2:	fa e0       	ldi	r31, 0x0A	; 10
     8f4:	bf 2e       	mov	r11, r31
     8f6:	f0 2d       	mov	r31, r0
     8f8:	07 e0       	ldi	r16, 0x07	; 7
     8fa:	11 e0       	ldi	r17, 0x01	; 1
     8fc:	ef e3       	ldi	r30, 0x3F	; 63
     8fe:	ff e1       	ldi	r31, 0x1F	; 31
     900:	31 97       	sbiw	r30, 0x01	; 1
     902:	f1 f7       	brne	.-4      	; 0x900 <_Z15Make_TCP_PacketPcibbb+0x39a>
     904:	00 c0       	rjmp	.+0      	; 0x906 <_Z15Make_TCP_PacketPcibbb+0x3a0>
     906:	00 00       	nop
     908:	76 c0       	rjmp	.+236    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     90a:	82 e5       	ldi	r24, 0x52	; 82
     90c:	95 e0       	ldi	r25, 0x05	; 5
     90e:	33 dd       	rcall	.-1434   	; 0x376 <_Z11ENC_ReceivePc>
     910:	90 93 51 05 	sts	0x0551, r25
     914:	80 93 50 05 	sts	0x0550, r24
     918:	80 91 5e 05 	lds	r24, 0x055E
     91c:	88 30       	cpi	r24, 0x08	; 8
     91e:	09 f0       	breq	.+2      	; 0x922 <_Z15Make_TCP_PacketPcibbb+0x3bc>
     920:	6a c0       	rjmp	.+212    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     922:	80 91 5f 05 	lds	r24, 0x055F
     926:	81 11       	cpse	r24, r1
     928:	66 c0       	rjmp	.+204    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     92a:	80 91 69 05 	lds	r24, 0x0569
     92e:	86 30       	cpi	r24, 0x06	; 6
     930:	09 f0       	breq	.+2      	; 0x934 <_Z15Make_TCP_PacketPcibbb+0x3ce>
     932:	61 c0       	rjmp	.+194    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     934:	90 91 70 05 	lds	r25, 0x0570
     938:	f8 01       	movw	r30, r16
     93a:	80 81       	ld	r24, Z
     93c:	98 13       	cpse	r25, r24
     93e:	5b c0       	rjmp	.+182    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     940:	90 91 71 05 	lds	r25, 0x0571
     944:	81 81       	ldd	r24, Z+1	; 0x01
     946:	98 13       	cpse	r25, r24
     948:	56 c0       	rjmp	.+172    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     94a:	90 91 72 05 	lds	r25, 0x0572
     94e:	82 81       	ldd	r24, Z+2	; 0x02
     950:	98 13       	cpse	r25, r24
     952:	51 c0       	rjmp	.+162    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     954:	90 91 73 05 	lds	r25, 0x0573
     958:	83 81       	ldd	r24, Z+3	; 0x03
     95a:	98 13       	cpse	r25, r24
     95c:	4c c0       	rjmp	.+152    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     95e:	80 91 81 05 	lds	r24, 0x0581
     962:	84 ff       	sbrs	r24, 4
     964:	48 c0       	rjmp	.+144    	; 0x9f6 <_Z15Make_TCP_PacketPcibbb+0x490>
     966:	91 e0       	ldi	r25, 0x01	; 1
     968:	80 ff       	sbrs	r24, 0
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	91 11       	cpse	r25, r1
     96e:	06 c0       	rjmp	.+12     	; 0x97c <_Z15Make_TCP_PacketPcibbb+0x416>
     970:	91 e0       	ldi	r25, 0x01	; 1
     972:	82 ff       	sbrs	r24, 2
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	99 23       	and	r25, r25
     978:	09 f4       	brne	.+2      	; 0x97c <_Z15Make_TCP_PacketPcibbb+0x416>
     97a:	49 c0       	rjmp	.+146    	; 0xa0e <_Z15Make_TCP_PacketPcibbb+0x4a8>
     97c:	e2 e5       	ldi	r30, 0x52	; 82
     97e:	f5 e0       	ldi	r31, 0x05	; 5
     980:	81 a5       	ldd	r24, Z+41	; 0x29
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	a0 e0       	ldi	r26, 0x00	; 0
     986:	b0 e0       	ldi	r27, 0x00	; 0
     988:	ac 01       	movw	r20, r24
     98a:	bd 01       	movw	r22, r26
     98c:	4f 5f       	subi	r20, 0xFF	; 255
     98e:	5f 4f       	sbci	r21, 0xFF	; 255
     990:	6f 4f       	sbci	r22, 0xFF	; 255
     992:	7f 4f       	sbci	r23, 0xFF	; 255
     994:	86 a1       	ldd	r24, Z+38	; 0x26
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	a0 e0       	ldi	r26, 0x00	; 0
     99a:	b0 e0       	ldi	r27, 0x00	; 0
     99c:	ba 2f       	mov	r27, r26
     99e:	a9 2f       	mov	r26, r25
     9a0:	98 2f       	mov	r25, r24
     9a2:	88 27       	eor	r24, r24
     9a4:	27 a1       	ldd	r18, Z+39	; 0x27
     9a6:	82 0f       	add	r24, r18
     9a8:	91 1d       	adc	r25, r1
     9aa:	a1 1d       	adc	r26, r1
     9ac:	b1 1d       	adc	r27, r1
     9ae:	ba 2f       	mov	r27, r26
     9b0:	a9 2f       	mov	r26, r25
     9b2:	98 2f       	mov	r25, r24
     9b4:	88 27       	eor	r24, r24
     9b6:	20 a5       	ldd	r18, Z+40	; 0x28
     9b8:	82 0f       	add	r24, r18
     9ba:	91 1d       	adc	r25, r1
     9bc:	a1 1d       	adc	r26, r1
     9be:	b1 1d       	adc	r27, r1
     9c0:	ba 2f       	mov	r27, r26
     9c2:	a9 2f       	mov	r26, r25
     9c4:	98 2f       	mov	r25, r24
     9c6:	88 27       	eor	r24, r24
     9c8:	84 0f       	add	r24, r20
     9ca:	95 1f       	adc	r25, r21
     9cc:	a6 1f       	adc	r26, r22
     9ce:	b7 1f       	adc	r27, r23
     9d0:	80 93 ae 07 	sts	0x07AE, r24
     9d4:	90 93 af 07 	sts	0x07AF, r25
     9d8:	a0 93 b0 07 	sts	0x07B0, r26
     9dc:	b0 93 b1 07 	sts	0x07B1, r27
     9e0:	00 e0       	ldi	r16, 0x00	; 0
     9e2:	21 e0       	ldi	r18, 0x01	; 1
     9e4:	40 e0       	ldi	r20, 0x00	; 0
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	86 e2       	ldi	r24, 0x26	; 38
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	bb dd       	rcall	.-1162   	; 0x566 <_Z15Make_TCP_PacketPcibbb>
     9f0:	10 92 4f 05 	sts	0x054F, r1
     9f4:	0c c0       	rjmp	.+24     	; 0xa0e <_Z15Make_TCP_PacketPcibbb+0x4a8>
     9f6:	b1 dd       	rcall	.-1182   	; 0x55a <_Z9NewPacketv>
     9f8:	81 11       	cpse	r24, r1
     9fa:	87 cf       	rjmp	.-242    	; 0x90a <_Z15Make_TCP_PacketPcibbb+0x3a4>
     9fc:	49 e4       	ldi	r20, 0x49	; 73
     9fe:	b7 01       	movw	r22, r14
     a00:	ce 01       	movw	r24, r28
     a02:	83 52       	subi	r24, 0x23	; 35
     a04:	9a 4f       	sbci	r25, 0xFA	; 250
     a06:	29 dd       	rcall	.-1454   	; 0x45a <_Z12ENC_TransmitPcjc>
     a08:	88 23       	and	r24, r24
     a0a:	c1 f3       	breq	.-16     	; 0x9fc <_Z15Make_TCP_PacketPcibbb+0x496>
     a0c:	19 c0       	rjmp	.+50     	; 0xa40 <_Z15Make_TCP_PacketPcibbb+0x4da>
     a0e:	c6 01       	movw	r24, r12
     a10:	dd 0c       	add	r13, r13
     a12:	aa 0b       	sbc	r26, r26
     a14:	bb 0b       	sbc	r27, r27
     a16:	c0 90 00 01 	lds	r12, 0x0100
     a1a:	d0 90 01 01 	lds	r13, 0x0101
     a1e:	e0 90 02 01 	lds	r14, 0x0102
     a22:	f0 90 03 01 	lds	r15, 0x0103
     a26:	c8 0e       	add	r12, r24
     a28:	d9 1e       	adc	r13, r25
     a2a:	ea 1e       	adc	r14, r26
     a2c:	fb 1e       	adc	r15, r27
     a2e:	c0 92 00 01 	sts	0x0100, r12
     a32:	d0 92 01 01 	sts	0x0101, r13
     a36:	e0 92 02 01 	sts	0x0102, r14
     a3a:	f0 92 03 01 	sts	0x0103, r15
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <_Z15Make_TCP_PacketPcibbb+0x4e2>
     a40:	ba 94       	dec	r11
     a42:	b1 10       	cpse	r11, r1
     a44:	5b cf       	rjmp	.-330    	; 0x8fc <_Z15Make_TCP_PacketPcibbb+0x396>
     a46:	47 cf       	rjmp	.-370    	; 0x8d6 <_Z15Make_TCP_PacketPcibbb+0x370>
     a48:	cb 5c       	subi	r28, 0xCB	; 203
     a4a:	d7 4f       	sbci	r29, 0xF7	; 247
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	de bf       	out	0x3e, r29	; 62
     a52:	0f be       	out	0x3f, r0	; 63
     a54:	cd bf       	out	0x3d, r28	; 61
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	df 90       	pop	r13
     a64:	cf 90       	pop	r12
     a66:	bf 90       	pop	r11
     a68:	af 90       	pop	r10
     a6a:	9f 90       	pop	r9
     a6c:	8f 90       	pop	r8
     a6e:	7f 90       	pop	r7
     a70:	6f 90       	pop	r6
     a72:	5f 90       	pop	r5
     a74:	4f 90       	pop	r4
     a76:	3f 90       	pop	r3
     a78:	2f 90       	pop	r2
     a7a:	08 95       	ret

00000a7c <_Z9TCP_checkPci>:
     a7c:	cf 92       	push	r12
     a7e:	df 92       	push	r13
     a80:	ef 92       	push	r14
     a82:	ff 92       	push	r15
     a84:	0f 93       	push	r16
     a86:	cf 93       	push	r28
     a88:	df 93       	push	r29
     a8a:	62 33       	cpi	r22, 0x32	; 50
     a8c:	71 05       	cpc	r23, r1
     a8e:	0c f4       	brge	.+2      	; 0xa92 <_Z9TCP_checkPci+0x16>
     a90:	89 c1       	rjmp	.+786    	; 0xda4 <_Z9TCP_checkPci+0x328>
     a92:	fc 01       	movw	r30, r24
     a94:	24 85       	ldd	r18, Z+12	; 0x0c
     a96:	28 30       	cpi	r18, 0x08	; 8
     a98:	09 f0       	breq	.+2      	; 0xa9c <_Z9TCP_checkPci+0x20>
     a9a:	87 c1       	rjmp	.+782    	; 0xdaa <_Z9TCP_checkPci+0x32e>
     a9c:	25 85       	ldd	r18, Z+13	; 0x0d
     a9e:	21 11       	cpse	r18, r1
     aa0:	87 c1       	rjmp	.+782    	; 0xdb0 <_Z9TCP_checkPci+0x334>
     aa2:	27 89       	ldd	r18, Z+23	; 0x17
     aa4:	26 30       	cpi	r18, 0x06	; 6
     aa6:	09 f0       	breq	.+2      	; 0xaaa <_Z9TCP_checkPci+0x2e>
     aa8:	86 c1       	rjmp	.+780    	; 0xdb6 <_Z9TCP_checkPci+0x33a>
     aaa:	36 8d       	ldd	r19, Z+30	; 0x1e
     aac:	20 91 07 01 	lds	r18, 0x0107
     ab0:	32 13       	cpse	r19, r18
     ab2:	84 c1       	rjmp	.+776    	; 0xdbc <_Z9TCP_checkPci+0x340>
     ab4:	37 8d       	ldd	r19, Z+31	; 0x1f
     ab6:	20 91 08 01 	lds	r18, 0x0108
     aba:	32 13       	cpse	r19, r18
     abc:	82 c1       	rjmp	.+772    	; 0xdc2 <_Z9TCP_checkPci+0x346>
     abe:	30 a1       	ldd	r19, Z+32	; 0x20
     ac0:	20 91 09 01 	lds	r18, 0x0109
     ac4:	32 13       	cpse	r19, r18
     ac6:	80 c1       	rjmp	.+768    	; 0xdc8 <_Z9TCP_checkPci+0x34c>
     ac8:	31 a1       	ldd	r19, Z+33	; 0x21
     aca:	20 91 0a 01 	lds	r18, 0x010A
     ace:	32 13       	cpse	r19, r18
     ad0:	7e c1       	rjmp	.+764    	; 0xdce <_Z9TCP_checkPci+0x352>
     ad2:	b0 89       	ldd	r27, Z+16	; 0x10
     ad4:	c1 89       	ldd	r28, Z+17	; 0x11
     ad6:	36 a5       	ldd	r19, Z+46	; 0x2e
     ad8:	26 85       	ldd	r18, Z+14	; 0x0e
     ada:	47 a5       	ldd	r20, Z+47	; 0x2f
     adc:	50 91 4f 05 	lds	r21, 0x054F
     ae0:	a1 e0       	ldi	r26, 0x01	; 1
     ae2:	41 ff       	sbrs	r20, 1
     ae4:	a0 e0       	ldi	r26, 0x00	; 0
     ae6:	fc 01       	movw	r30, r24
     ae8:	5a 17       	cp	r21, r26
     aea:	08 f0       	brcs	.+2      	; 0xaee <_Z9TCP_checkPci+0x72>
     aec:	73 c0       	rjmp	.+230    	; 0xbd4 <_Z9TCP_checkPci+0x158>
     aee:	81 a5       	ldd	r24, Z+41	; 0x29
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	a0 e0       	ldi	r26, 0x00	; 0
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	ac 01       	movw	r20, r24
     af8:	bd 01       	movw	r22, r26
     afa:	4f 5f       	subi	r20, 0xFF	; 255
     afc:	5f 4f       	sbci	r21, 0xFF	; 255
     afe:	6f 4f       	sbci	r22, 0xFF	; 255
     b00:	7f 4f       	sbci	r23, 0xFF	; 255
     b02:	86 a1       	ldd	r24, Z+38	; 0x26
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	a0 e0       	ldi	r26, 0x00	; 0
     b08:	b0 e0       	ldi	r27, 0x00	; 0
     b0a:	ba 2f       	mov	r27, r26
     b0c:	a9 2f       	mov	r26, r25
     b0e:	98 2f       	mov	r25, r24
     b10:	88 27       	eor	r24, r24
     b12:	27 a1       	ldd	r18, Z+39	; 0x27
     b14:	82 0f       	add	r24, r18
     b16:	91 1d       	adc	r25, r1
     b18:	a1 1d       	adc	r26, r1
     b1a:	b1 1d       	adc	r27, r1
     b1c:	ba 2f       	mov	r27, r26
     b1e:	a9 2f       	mov	r26, r25
     b20:	98 2f       	mov	r25, r24
     b22:	88 27       	eor	r24, r24
     b24:	20 a5       	ldd	r18, Z+40	; 0x28
     b26:	82 0f       	add	r24, r18
     b28:	91 1d       	adc	r25, r1
     b2a:	a1 1d       	adc	r26, r1
     b2c:	b1 1d       	adc	r27, r1
     b2e:	ba 2f       	mov	r27, r26
     b30:	a9 2f       	mov	r26, r25
     b32:	98 2f       	mov	r25, r24
     b34:	88 27       	eor	r24, r24
     b36:	84 0f       	add	r24, r20
     b38:	95 1f       	adc	r25, r21
     b3a:	a6 1f       	adc	r26, r22
     b3c:	b7 1f       	adc	r27, r23
     b3e:	80 93 ae 07 	sts	0x07AE, r24
     b42:	90 93 af 07 	sts	0x07AF, r25
     b46:	a0 93 b0 07 	sts	0x07B0, r26
     b4a:	b0 93 b1 07 	sts	0x07B1, r27
     b4e:	df 01       	movw	r26, r30
     b50:	5a 96       	adiw	r26, 0x1a	; 26
     b52:	cb e0       	ldi	r28, 0x0B	; 11
     b54:	d1 e0       	ldi	r29, 0x01	; 1
     b56:	9f 01       	movw	r18, r30
     b58:	22 5e       	subi	r18, 0xE2	; 226
     b5a:	3f 4f       	sbci	r19, 0xFF	; 255
     b5c:	8d 91       	ld	r24, X+
     b5e:	89 93       	st	Y+, r24
     b60:	a2 17       	cp	r26, r18
     b62:	b3 07       	cpc	r27, r19
     b64:	d9 f7       	brne	.-10     	; 0xb5c <_Z9TCP_checkPci+0xe0>
     b66:	df 01       	movw	r26, r30
     b68:	16 96       	adiw	r26, 0x06	; 6
     b6a:	cf e0       	ldi	r28, 0x0F	; 15
     b6c:	d1 e0       	ldi	r29, 0x01	; 1
     b6e:	9f 01       	movw	r18, r30
     b70:	24 5f       	subi	r18, 0xF4	; 244
     b72:	3f 4f       	sbci	r19, 0xFF	; 255
     b74:	8d 91       	ld	r24, X+
     b76:	89 93       	st	Y+, r24
     b78:	a2 17       	cp	r26, r18
     b7a:	b3 07       	cpc	r27, r19
     b7c:	d9 f7       	brne	.-10     	; 0xb74 <_Z9TCP_checkPci+0xf8>
     b7e:	82 a1       	ldd	r24, Z+34	; 0x22
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	98 2f       	mov	r25, r24
     b84:	88 27       	eor	r24, r24
     b86:	23 a1       	ldd	r18, Z+35	; 0x23
     b88:	82 2b       	or	r24, r18
     b8a:	90 93 05 01 	sts	0x0105, r25
     b8e:	80 93 04 01 	sts	0x0104, r24
     b92:	00 e0       	ldi	r16, 0x00	; 0
     b94:	21 e0       	ldi	r18, 0x01	; 1
     b96:	41 e0       	ldi	r20, 0x01	; 1
     b98:	60 e0       	ldi	r22, 0x00	; 0
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	86 e2       	ldi	r24, 0x26	; 38
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	e2 dc       	rcall	.-1596   	; 0x566 <_Z15Make_TCP_PacketPcibbb>
     ba2:	80 91 00 01 	lds	r24, 0x0100
     ba6:	90 91 01 01 	lds	r25, 0x0101
     baa:	a0 91 02 01 	lds	r26, 0x0102
     bae:	b0 91 03 01 	lds	r27, 0x0103
     bb2:	01 96       	adiw	r24, 0x01	; 1
     bb4:	a1 1d       	adc	r26, r1
     bb6:	b1 1d       	adc	r27, r1
     bb8:	80 93 00 01 	sts	0x0100, r24
     bbc:	90 93 01 01 	sts	0x0101, r25
     bc0:	a0 93 02 01 	sts	0x0102, r26
     bc4:	b0 93 03 01 	sts	0x0103, r27
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	80 93 4f 05 	sts	0x054F, r24
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	02 c1       	rjmp	.+516    	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	40 ff       	sbrs	r20, 0
     bd8:	80 e0       	ldi	r24, 0x00	; 0
     bda:	81 11       	cpse	r24, r1
     bdc:	06 c0       	rjmp	.+12     	; 0xbea <_Z9TCP_checkPci+0x16e>
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	42 ff       	sbrs	r20, 2
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	88 23       	and	r24, r24
     be6:	09 f4       	brne	.+2      	; 0xbea <_Z9TCP_checkPci+0x16e>
     be8:	5d c0       	rjmp	.+186    	; 0xca4 <_Z9TCP_checkPci+0x228>
     bea:	81 a5       	ldd	r24, Z+41	; 0x29
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	a0 e0       	ldi	r26, 0x00	; 0
     bf0:	b0 e0       	ldi	r27, 0x00	; 0
     bf2:	ac 01       	movw	r20, r24
     bf4:	bd 01       	movw	r22, r26
     bf6:	4f 5f       	subi	r20, 0xFF	; 255
     bf8:	5f 4f       	sbci	r21, 0xFF	; 255
     bfa:	6f 4f       	sbci	r22, 0xFF	; 255
     bfc:	7f 4f       	sbci	r23, 0xFF	; 255
     bfe:	86 a1       	ldd	r24, Z+38	; 0x26
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	a0 e0       	ldi	r26, 0x00	; 0
     c04:	b0 e0       	ldi	r27, 0x00	; 0
     c06:	ba 2f       	mov	r27, r26
     c08:	a9 2f       	mov	r26, r25
     c0a:	98 2f       	mov	r25, r24
     c0c:	88 27       	eor	r24, r24
     c0e:	27 a1       	ldd	r18, Z+39	; 0x27
     c10:	82 0f       	add	r24, r18
     c12:	91 1d       	adc	r25, r1
     c14:	a1 1d       	adc	r26, r1
     c16:	b1 1d       	adc	r27, r1
     c18:	ba 2f       	mov	r27, r26
     c1a:	a9 2f       	mov	r26, r25
     c1c:	98 2f       	mov	r25, r24
     c1e:	88 27       	eor	r24, r24
     c20:	20 a5       	ldd	r18, Z+40	; 0x28
     c22:	82 0f       	add	r24, r18
     c24:	91 1d       	adc	r25, r1
     c26:	a1 1d       	adc	r26, r1
     c28:	b1 1d       	adc	r27, r1
     c2a:	ba 2f       	mov	r27, r26
     c2c:	a9 2f       	mov	r26, r25
     c2e:	98 2f       	mov	r25, r24
     c30:	88 27       	eor	r24, r24
     c32:	84 0f       	add	r24, r20
     c34:	95 1f       	adc	r25, r21
     c36:	a6 1f       	adc	r26, r22
     c38:	b7 1f       	adc	r27, r23
     c3a:	80 93 ae 07 	sts	0x07AE, r24
     c3e:	90 93 af 07 	sts	0x07AF, r25
     c42:	a0 93 b0 07 	sts	0x07B0, r26
     c46:	b0 93 b1 07 	sts	0x07B1, r27
     c4a:	00 e0       	ldi	r16, 0x00	; 0
     c4c:	21 e0       	ldi	r18, 0x01	; 1
     c4e:	40 e0       	ldi	r20, 0x00	; 0
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	86 e2       	ldi	r24, 0x26	; 38
     c56:	91 e0       	ldi	r25, 0x01	; 1
     c58:	86 dc       	rcall	.-1780   	; 0x566 <_Z15Make_TCP_PacketPcibbb>
     c5a:	8a ea       	ldi	r24, 0xAA	; 170
     c5c:	90 e3       	ldi	r25, 0x30	; 48
     c5e:	a0 e0       	ldi	r26, 0x00	; 0
     c60:	b0 e0       	ldi	r27, 0x00	; 0
     c62:	80 93 00 01 	sts	0x0100, r24
     c66:	90 93 01 01 	sts	0x0101, r25
     c6a:	a0 93 02 01 	sts	0x0102, r26
     c6e:	b0 93 03 01 	sts	0x0103, r27
     c72:	10 92 aa 07 	sts	0x07AA, r1
     c76:	10 92 ab 07 	sts	0x07AB, r1
     c7a:	10 92 ac 07 	sts	0x07AC, r1
     c7e:	10 92 ad 07 	sts	0x07AD, r1
     c82:	10 92 ae 07 	sts	0x07AE, r1
     c86:	10 92 af 07 	sts	0x07AF, r1
     c8a:	10 92 b0 07 	sts	0x07B0, r1
     c8e:	10 92 b1 07 	sts	0x07B1, r1
     c92:	10 92 51 05 	sts	0x0551, r1
     c96:	10 92 50 05 	sts	0x0550, r1
     c9a:	10 92 4f 05 	sts	0x054F, r1
     c9e:	80 e0       	ldi	r24, 0x00	; 0
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	9a c0       	rjmp	.+308    	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     ca4:	d0 e0       	ldi	r29, 0x00	; 0
     ca6:	db 2b       	or	r29, r27
     ca8:	83 2f       	mov	r24, r19
     caa:	82 95       	swap	r24
     cac:	8f 70       	andi	r24, 0x0F	; 15
     cae:	94 e0       	ldi	r25, 0x04	; 4
     cb0:	89 9f       	mul	r24, r25
     cb2:	c0 19       	sub	r28, r0
     cb4:	d1 09       	sbc	r29, r1
     cb6:	11 24       	eor	r1, r1
     cb8:	82 2f       	mov	r24, r18
     cba:	8f 70       	andi	r24, 0x0F	; 15
     cbc:	94 e0       	ldi	r25, 0x04	; 4
     cbe:	89 9f       	mul	r24, r25
     cc0:	c0 19       	sub	r28, r0
     cc2:	d1 09       	sbc	r29, r1
     cc4:	11 24       	eor	r1, r1
     cc6:	21 e0       	ldi	r18, 0x01	; 1
     cc8:	20 97       	sbiw	r28, 0x00	; 0
     cca:	09 f4       	brne	.+2      	; 0xcce <_Z9TCP_checkPci+0x252>
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	22 23       	and	r18, r18
     cd0:	09 f4       	brne	.+2      	; 0xcd4 <_Z9TCP_checkPci+0x258>
     cd2:	80 c0       	rjmp	.+256    	; 0xdd4 <_Z9TCP_checkPci+0x358>
     cd4:	55 23       	and	r21, r21
     cd6:	09 f4       	brne	.+2      	; 0xcda <_Z9TCP_checkPci+0x25e>
     cd8:	7d c0       	rjmp	.+250    	; 0xdd4 <_Z9TCP_checkPci+0x358>
     cda:	86 a1       	ldd	r24, Z+38	; 0x26
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	a0 e0       	ldi	r26, 0x00	; 0
     ce0:	b0 e0       	ldi	r27, 0x00	; 0
     ce2:	ba 2f       	mov	r27, r26
     ce4:	a9 2f       	mov	r26, r25
     ce6:	98 2f       	mov	r25, r24
     ce8:	88 27       	eor	r24, r24
     cea:	37 a1       	ldd	r19, Z+39	; 0x27
     cec:	83 0f       	add	r24, r19
     cee:	91 1d       	adc	r25, r1
     cf0:	a1 1d       	adc	r26, r1
     cf2:	b1 1d       	adc	r27, r1
     cf4:	ba 2f       	mov	r27, r26
     cf6:	a9 2f       	mov	r26, r25
     cf8:	98 2f       	mov	r25, r24
     cfa:	88 27       	eor	r24, r24
     cfc:	30 a5       	ldd	r19, Z+40	; 0x28
     cfe:	83 0f       	add	r24, r19
     d00:	91 1d       	adc	r25, r1
     d02:	a1 1d       	adc	r26, r1
     d04:	b1 1d       	adc	r27, r1
     d06:	ba 2f       	mov	r27, r26
     d08:	a9 2f       	mov	r26, r25
     d0a:	98 2f       	mov	r25, r24
     d0c:	88 27       	eor	r24, r24
     d0e:	31 a5       	ldd	r19, Z+41	; 0x29
     d10:	83 0f       	add	r24, r19
     d12:	91 1d       	adc	r25, r1
     d14:	a1 1d       	adc	r26, r1
     d16:	b1 1d       	adc	r27, r1
     d18:	c0 90 aa 07 	lds	r12, 0x07AA
     d1c:	d0 90 ab 07 	lds	r13, 0x07AB
     d20:	e0 90 ac 07 	lds	r14, 0x07AC
     d24:	f0 90 ad 07 	lds	r15, 0x07AD
     d28:	c8 16       	cp	r12, r24
     d2a:	d9 06       	cpc	r13, r25
     d2c:	ea 06       	cpc	r14, r26
     d2e:	fb 06       	cpc	r15, r27
     d30:	60 f5       	brcc	.+88     	; 0xd8a <_Z9TCP_checkPci+0x30e>
     d32:	c0 90 ae 07 	lds	r12, 0x07AE
     d36:	d0 90 af 07 	lds	r13, 0x07AF
     d3a:	e0 90 b0 07 	lds	r14, 0x07B0
     d3e:	f0 90 b1 07 	lds	r15, 0x07B1
     d42:	cc 0e       	add	r12, r28
     d44:	dd 1e       	adc	r13, r29
     d46:	e1 1c       	adc	r14, r1
     d48:	f1 1c       	adc	r15, r1
     d4a:	c0 92 ae 07 	sts	0x07AE, r12
     d4e:	d0 92 af 07 	sts	0x07AF, r13
     d52:	e0 92 b0 07 	sts	0x07B0, r14
     d56:	f0 92 b1 07 	sts	0x07B1, r15
     d5a:	80 93 aa 07 	sts	0x07AA, r24
     d5e:	90 93 ab 07 	sts	0x07AB, r25
     d62:	a0 93 ac 07 	sts	0x07AC, r26
     d66:	b0 93 ad 07 	sts	0x07AD, r27
     d6a:	22 23       	and	r18, r18
     d6c:	81 f0       	breq	.+32     	; 0xd8e <_Z9TCP_checkPci+0x312>
     d6e:	6c 1b       	sub	r22, r28
     d70:	7d 0b       	sbc	r23, r29
     d72:	df 01       	movw	r26, r30
     d74:	a6 0f       	add	r26, r22
     d76:	b7 1f       	adc	r27, r23
     d78:	80 e0       	ldi	r24, 0x00	; 0
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	2d 91       	ld	r18, X+
     d7e:	21 93       	st	Z+, r18
     d80:	01 96       	adiw	r24, 0x01	; 1
     d82:	8c 17       	cp	r24, r28
     d84:	9d 07       	cpc	r25, r29
     d86:	d0 f3       	brcs	.-12     	; 0xd7c <_Z9TCP_checkPci+0x300>
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <_Z9TCP_checkPci+0x312>
     d8a:	c0 e0       	ldi	r28, 0x00	; 0
     d8c:	d0 e0       	ldi	r29, 0x00	; 0
     d8e:	00 e0       	ldi	r16, 0x00	; 0
     d90:	21 e0       	ldi	r18, 0x01	; 1
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	60 e0       	ldi	r22, 0x00	; 0
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	86 e2       	ldi	r24, 0x26	; 38
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	e4 db       	rcall	.-2104   	; 0x566 <_Z15Make_TCP_PacketPcibbb>
     d9e:	8c 2f       	mov	r24, r28
     da0:	9d 2f       	mov	r25, r29
     da2:	1a c0       	rjmp	.+52     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	17 c0       	rjmp	.+46     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	14 c0       	rjmp	.+40     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	11 c0       	rjmp	.+34     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e c0       	rjmp	.+28     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0b c0       	rjmp	.+22     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     dc2:	80 e0       	ldi	r24, 0x00	; 0
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	08 c0       	rjmp	.+16     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	05 c0       	rjmp	.+10     	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <_Z9TCP_checkPci+0x35c>
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	0f 91       	pop	r16
     dde:	ff 90       	pop	r15
     de0:	ef 90       	pop	r14
     de2:	df 90       	pop	r13
     de4:	cf 90       	pop	r12
     de6:	08 95       	ret

00000de8 <_Z9ARP_replyPcS_>:
		}

}

void ARP_reply(char dest_IP[] , char dest_MAC[] )
{
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	cd b7       	in	r28, 0x3d	; 61
     dee:	de b7       	in	r29, 0x3e	; 62
     df0:	6d 97       	sbiw	r28, 0x1d	; 29
     df2:	0f b6       	in	r0, 0x3f	; 63
     df4:	f8 94       	cli
     df6:	de bf       	out	0x3e, r29	; 62
     df8:	0f be       	out	0x3f, r0	; 63
     dfa:	cd bf       	out	0x3d, r28	; 61
     dfc:	fb 01       	movw	r30, r22
	char ARP_Request[29] = {0x00,0x01,0x08,0x00,0x06,0x04,0x00,0x02, 
							MAC[0],MAC[1],MAC[2],MAC[3],MAC[4],MAC[5],
							My_IP[0],My_IP[1],My_IP[2],My_IP[3],
							dest_MAC[0],dest_MAC[1],dest_MAC[2],dest_MAC[3],dest_MAC[4],dest_MAC[5],
							dest_IP[0],dest_IP[1],dest_IP[2],dest_IP[3], 
							0x00};
     dfe:	9e 01       	movw	r18, r28
     e00:	2f 5f       	subi	r18, 0xFF	; 255
     e02:	3f 4f       	sbci	r19, 0xFF	; 255
     e04:	4d e1       	ldi	r20, 0x1D	; 29
     e06:	d9 01       	movw	r26, r18
     e08:	1d 92       	st	X+, r1
     e0a:	4a 95       	dec	r20
     e0c:	e9 f7       	brne	.-6      	; 0xe08 <_Z9ARP_replyPcS_+0x20>
     e0e:	41 e0       	ldi	r20, 0x01	; 1
     e10:	4a 83       	std	Y+2, r20	; 0x02
     e12:	48 e0       	ldi	r20, 0x08	; 8
     e14:	4b 83       	std	Y+3, r20	; 0x03
     e16:	46 e0       	ldi	r20, 0x06	; 6
     e18:	4d 83       	std	Y+5, r20	; 0x05
     e1a:	44 e0       	ldi	r20, 0x04	; 4
     e1c:	4e 83       	std	Y+6, r20	; 0x06
     e1e:	42 e0       	ldi	r20, 0x02	; 2
     e20:	48 87       	std	Y+8, r20	; 0x08
}

void ARP_reply(char dest_IP[] , char dest_MAC[] )
{
	char ARP_Request[29] = {0x00,0x01,0x08,0x00,0x06,0x04,0x00,0x02, 
							MAC[0],MAC[1],MAC[2],MAC[3],MAC[4],MAC[5],
     e22:	a5 e1       	ldi	r26, 0x15	; 21
     e24:	b1 e0       	ldi	r27, 0x01	; 1
							My_IP[0],My_IP[1],My_IP[2],My_IP[3],
							dest_MAC[0],dest_MAC[1],dest_MAC[2],dest_MAC[3],dest_MAC[4],dest_MAC[5],
							dest_IP[0],dest_IP[1],dest_IP[2],dest_IP[3], 
							0x00};
     e26:	4c 91       	ld	r20, X
     e28:	49 87       	std	Y+9, r20	; 0x09
     e2a:	11 96       	adiw	r26, 0x01	; 1
     e2c:	4c 91       	ld	r20, X
     e2e:	11 97       	sbiw	r26, 0x01	; 1
     e30:	4a 87       	std	Y+10, r20	; 0x0a
     e32:	12 96       	adiw	r26, 0x02	; 2
     e34:	4c 91       	ld	r20, X
     e36:	12 97       	sbiw	r26, 0x02	; 2
     e38:	4b 87       	std	Y+11, r20	; 0x0b
     e3a:	13 96       	adiw	r26, 0x03	; 3
     e3c:	4c 91       	ld	r20, X
     e3e:	13 97       	sbiw	r26, 0x03	; 3
     e40:	4c 87       	std	Y+12, r20	; 0x0c
     e42:	14 96       	adiw	r26, 0x04	; 4
     e44:	4c 91       	ld	r20, X
     e46:	14 97       	sbiw	r26, 0x04	; 4
     e48:	4d 87       	std	Y+13, r20	; 0x0d
     e4a:	15 96       	adiw	r26, 0x05	; 5
     e4c:	4c 91       	ld	r20, X
     e4e:	4e 87       	std	Y+14, r20	; 0x0e

void ARP_reply(char dest_IP[] , char dest_MAC[] )
{
	char ARP_Request[29] = {0x00,0x01,0x08,0x00,0x06,0x04,0x00,0x02, 
							MAC[0],MAC[1],MAC[2],MAC[3],MAC[4],MAC[5],
							My_IP[0],My_IP[1],My_IP[2],My_IP[3],
     e50:	a7 e0       	ldi	r26, 0x07	; 7
     e52:	b1 e0       	ldi	r27, 0x01	; 1
							dest_MAC[0],dest_MAC[1],dest_MAC[2],dest_MAC[3],dest_MAC[4],dest_MAC[5],
							dest_IP[0],dest_IP[1],dest_IP[2],dest_IP[3], 
							0x00};
     e54:	4c 91       	ld	r20, X
     e56:	4f 87       	std	Y+15, r20	; 0x0f
     e58:	11 96       	adiw	r26, 0x01	; 1
     e5a:	4c 91       	ld	r20, X
     e5c:	11 97       	sbiw	r26, 0x01	; 1
     e5e:	48 8b       	std	Y+16, r20	; 0x10
     e60:	12 96       	adiw	r26, 0x02	; 2
     e62:	4c 91       	ld	r20, X
     e64:	12 97       	sbiw	r26, 0x02	; 2
     e66:	49 8b       	std	Y+17, r20	; 0x11
     e68:	13 96       	adiw	r26, 0x03	; 3
     e6a:	4c 91       	ld	r20, X
     e6c:	4a 8b       	std	Y+18, r20	; 0x12
     e6e:	40 81       	ld	r20, Z
     e70:	4b 8b       	std	Y+19, r20	; 0x13
     e72:	41 81       	ldd	r20, Z+1	; 0x01
     e74:	4c 8b       	std	Y+20, r20	; 0x14
     e76:	42 81       	ldd	r20, Z+2	; 0x02
     e78:	4d 8b       	std	Y+21, r20	; 0x15
     e7a:	43 81       	ldd	r20, Z+3	; 0x03
     e7c:	4e 8b       	std	Y+22, r20	; 0x16
     e7e:	44 81       	ldd	r20, Z+4	; 0x04
     e80:	4f 8b       	std	Y+23, r20	; 0x17
     e82:	45 81       	ldd	r20, Z+5	; 0x05
     e84:	48 8f       	std	Y+24, r20	; 0x18
     e86:	fc 01       	movw	r30, r24
     e88:	40 81       	ld	r20, Z
     e8a:	49 8f       	std	Y+25, r20	; 0x19
     e8c:	41 81       	ldd	r20, Z+1	; 0x01
     e8e:	4a 8f       	std	Y+26, r20	; 0x1a
     e90:	42 81       	ldd	r20, Z+2	; 0x02
     e92:	4b 8f       	std	Y+27, r20	; 0x1b
     e94:	83 81       	ldd	r24, Z+3	; 0x03
     e96:	8c 8f       	std	Y+28, r24	; 0x1c
							
	ENC_Transmit(ARP_Request,29,'A');
     e98:	41 e4       	ldi	r20, 0x41	; 65
     e9a:	6d e1       	ldi	r22, 0x1D	; 29
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	c9 01       	movw	r24, r18
     ea0:	dc da       	rcall	.-2632   	; 0x45a <_Z12ENC_TransmitPcjc>
     ea2:	6d 96       	adiw	r28, 0x1d	; 29
     ea4:	0f b6       	in	r0, 0x3f	; 63
     ea6:	f8 94       	cli
     ea8:	de bf       	out	0x3e, r29	; 62
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	cd bf       	out	0x3d, r28	; 61
     eae:	df 91       	pop	r29
     eb0:	cf 91       	pop	r28
     eb2:	08 95       	ret

00000eb4 <_Z9ARP_checkPc>:

char ARP_check(char data[]);
void ARP_reply(char dest_IP[] , char dest_MAC[]);

char ARP_check(char data[])
{
     eb4:	fc 01       	movw	r30, r24
		if ((data[12]==0x08)&&(data[13]==0x06)&&(data[14]==0x00)&&(data[38]==My_IP[0])&&(data[39]==My_IP[1])&&(data[40]==My_IP[2])&&(data[41]==My_IP[3]))
     eb6:	84 85       	ldd	r24, Z+12	; 0x0c
     eb8:	88 30       	cpi	r24, 0x08	; 8
     eba:	09 f0       	breq	.+2      	; 0xebe <_Z9ARP_checkPc+0xa>
     ebc:	48 c0       	rjmp	.+144    	; 0xf4e <_Z9ARP_checkPc+0x9a>
     ebe:	85 85       	ldd	r24, Z+13	; 0x0d
     ec0:	86 30       	cpi	r24, 0x06	; 6
     ec2:	09 f0       	breq	.+2      	; 0xec6 <_Z9ARP_checkPc+0x12>
     ec4:	44 c0       	rjmp	.+136    	; 0xf4e <_Z9ARP_checkPc+0x9a>
     ec6:	86 85       	ldd	r24, Z+14	; 0x0e
     ec8:	81 11       	cpse	r24, r1
     eca:	41 c0       	rjmp	.+130    	; 0xf4e <_Z9ARP_checkPc+0x9a>
     ecc:	96 a1       	ldd	r25, Z+38	; 0x26
     ece:	80 91 07 01 	lds	r24, 0x0107
     ed2:	98 13       	cpse	r25, r24
     ed4:	3c c0       	rjmp	.+120    	; 0xf4e <_Z9ARP_checkPc+0x9a>
     ed6:	97 a1       	ldd	r25, Z+39	; 0x27
     ed8:	80 91 08 01 	lds	r24, 0x0108
     edc:	98 13       	cpse	r25, r24
     ede:	37 c0       	rjmp	.+110    	; 0xf4e <_Z9ARP_checkPc+0x9a>
     ee0:	90 a5       	ldd	r25, Z+40	; 0x28
     ee2:	80 91 09 01 	lds	r24, 0x0109
     ee6:	98 13       	cpse	r25, r24
     ee8:	32 c0       	rjmp	.+100    	; 0xf4e <_Z9ARP_checkPc+0x9a>
     eea:	91 a5       	ldd	r25, Z+41	; 0x29
     eec:	80 91 0a 01 	lds	r24, 0x010A
     ef0:	98 13       	cpse	r25, r24
     ef2:	2d c0       	rjmp	.+90     	; 0xf4e <_Z9ARP_checkPc+0x9a>
		{
			Source_MAC[0]= data[6];
     ef4:	a5 e4       	ldi	r26, 0x45	; 69
     ef6:	b5 e0       	ldi	r27, 0x05	; 5
     ef8:	86 81       	ldd	r24, Z+6	; 0x06
     efa:	8c 93       	st	X, r24
			Source_MAC[1]= data[7];
     efc:	87 81       	ldd	r24, Z+7	; 0x07
     efe:	11 96       	adiw	r26, 0x01	; 1
     f00:	8c 93       	st	X, r24
     f02:	11 97       	sbiw	r26, 0x01	; 1
			Source_MAC[2]= data[8];
     f04:	80 85       	ldd	r24, Z+8	; 0x08
     f06:	12 96       	adiw	r26, 0x02	; 2
     f08:	8c 93       	st	X, r24
     f0a:	12 97       	sbiw	r26, 0x02	; 2
			Source_MAC[3]= data[9];
     f0c:	81 85       	ldd	r24, Z+9	; 0x09
     f0e:	13 96       	adiw	r26, 0x03	; 3
     f10:	8c 93       	st	X, r24
     f12:	13 97       	sbiw	r26, 0x03	; 3
			Source_MAC[4]= data[10];
     f14:	82 85       	ldd	r24, Z+10	; 0x0a
     f16:	14 96       	adiw	r26, 0x04	; 4
     f18:	8c 93       	st	X, r24
     f1a:	14 97       	sbiw	r26, 0x04	; 4
			Source_MAC[5]= data[11];
     f1c:	83 85       	ldd	r24, Z+11	; 0x0b
     f1e:	15 96       	adiw	r26, 0x05	; 5
     f20:	8c 93       	st	X, r24
			ARP_IP[0]= data[28];
     f22:	ab e4       	ldi	r26, 0x4B	; 75
     f24:	b5 e0       	ldi	r27, 0x05	; 5
     f26:	84 8d       	ldd	r24, Z+28	; 0x1c
     f28:	8c 93       	st	X, r24
			ARP_IP[1]= data[29];
     f2a:	85 8d       	ldd	r24, Z+29	; 0x1d
     f2c:	11 96       	adiw	r26, 0x01	; 1
     f2e:	8c 93       	st	X, r24
     f30:	11 97       	sbiw	r26, 0x01	; 1
			ARP_IP[2]= data[30];
     f32:	86 8d       	ldd	r24, Z+30	; 0x1e
     f34:	12 96       	adiw	r26, 0x02	; 2
     f36:	8c 93       	st	X, r24
     f38:	12 97       	sbiw	r26, 0x02	; 2
			ARP_IP[3]= data[31];
     f3a:	87 8d       	ldd	r24, Z+31	; 0x1f
     f3c:	13 96       	adiw	r26, 0x03	; 3
     f3e:	8c 93       	st	X, r24
     f40:	13 97       	sbiw	r26, 0x03	; 3
			
			//	Yes, Its ARP for you
			ARP_reply(ARP_IP ,Source_MAC);
     f42:	65 e4       	ldi	r22, 0x45	; 69
     f44:	75 e0       	ldi	r23, 0x05	; 5
     f46:	cd 01       	movw	r24, r26
     f48:	4f df       	rcall	.-354    	; 0xde8 <_Z9ARP_replyPcS_>
			return 'N';
     f4a:	8e e4       	ldi	r24, 0x4E	; 78
     f4c:	08 95       	ret
		}
		else
		{
			if (data[0]==0xFF)
     f4e:	80 81       	ld	r24, Z
     f50:	8f 3f       	cpi	r24, 0xFF	; 255
     f52:	11 f0       	breq	.+4      	; 0xf58 <_Z9ARP_checkPc+0xa4>
			{
				return 'N';				//	No, ignore it
			}
			else 
			{
				return 'O';				//	Other packet for you
     f54:	8f e4       	ldi	r24, 0x4F	; 79
     f56:	08 95       	ret
		}
		else
		{
			if (data[0]==0xFF)
			{
				return 'N';				//	No, ignore it
     f58:	8e e4       	ldi	r24, 0x4E	; 78
			{
				return 'O';				//	Other packet for you
			}
		}

}
     f5a:	08 95       	ret

00000f5c <_Z9UDP_checkPci>:
// number = serial number of the packet
// returns true or false depending on success.


int UDP_check(char data[], int length)
{
     f5c:	cf 93       	push	r28
     f5e:	df 93       	push	r29
     f60:	fc 01       	movw	r30, r24
	uint16_t data_length;
	if (length<42)
     f62:	6a 32       	cpi	r22, 0x2A	; 42
     f64:	71 05       	cpc	r23, r1
     f66:	c4 f1       	brlt	.+112    	; 0xfd8 <_Z9UDP_checkPci+0x7c>
	{
		return 0;
	}
	
	else if ((data[12]==0x08)&&(data[13]==0x00)&&(data[23]==0x11)&&(data[30]==My_IP[0])&&(data[31]==My_IP[1])&&(data[32]==My_IP[2])&&(data[33]==My_IP[3])&&(data[36]== PORTH)&&(data[37]==PORTL))
     f68:	84 85       	ldd	r24, Z+12	; 0x0c
     f6a:	88 30       	cpi	r24, 0x08	; 8
     f6c:	c1 f5       	brne	.+112    	; 0xfde <_Z9UDP_checkPci+0x82>
     f6e:	85 85       	ldd	r24, Z+13	; 0x0d
     f70:	81 11       	cpse	r24, r1
     f72:	38 c0       	rjmp	.+112    	; 0xfe4 <_Z9UDP_checkPci+0x88>
     f74:	87 89       	ldd	r24, Z+23	; 0x17
     f76:	81 31       	cpi	r24, 0x11	; 17
     f78:	c1 f5       	brne	.+112    	; 0xfea <_Z9UDP_checkPci+0x8e>
     f7a:	96 8d       	ldd	r25, Z+30	; 0x1e
     f7c:	80 91 07 01 	lds	r24, 0x0107
     f80:	98 13       	cpse	r25, r24
     f82:	36 c0       	rjmp	.+108    	; 0xff0 <_Z9UDP_checkPci+0x94>
     f84:	97 8d       	ldd	r25, Z+31	; 0x1f
     f86:	80 91 08 01 	lds	r24, 0x0108
     f8a:	98 13       	cpse	r25, r24
     f8c:	34 c0       	rjmp	.+104    	; 0xff6 <_Z9UDP_checkPci+0x9a>
     f8e:	90 a1       	ldd	r25, Z+32	; 0x20
     f90:	80 91 09 01 	lds	r24, 0x0109
     f94:	98 13       	cpse	r25, r24
     f96:	32 c0       	rjmp	.+100    	; 0xffc <_Z9UDP_checkPci+0xa0>
     f98:	91 a1       	ldd	r25, Z+33	; 0x21
     f9a:	80 91 0a 01 	lds	r24, 0x010A
     f9e:	98 13       	cpse	r25, r24
     fa0:	30 c0       	rjmp	.+96     	; 0x1002 <_Z9UDP_checkPci+0xa6>
     fa2:	84 a1       	ldd	r24, Z+36	; 0x24
     fa4:	81 11       	cpse	r24, r1
     fa6:	30 c0       	rjmp	.+96     	; 0x1008 <_Z9UDP_checkPci+0xac>
     fa8:	85 a1       	ldd	r24, Z+37	; 0x25
     faa:	84 36       	cpi	r24, 0x64	; 100
     fac:	81 f5       	brne	.+96     	; 0x100e <_Z9UDP_checkPci+0xb2>
	{
		data_length = ((data[38]<<8) | ( 0xFF & data[39])) -8 ;
     fae:	86 a1       	ldd	r24, Z+38	; 0x26
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	98 2f       	mov	r25, r24
     fb4:	88 27       	eor	r24, r24
     fb6:	27 a1       	ldd	r18, Z+39	; 0x27
     fb8:	82 2b       	or	r24, r18
     fba:	08 97       	sbiw	r24, 0x08	; 8
		for (int x = 0; x<length;x++)
     fbc:	16 16       	cp	r1, r22
     fbe:	17 06       	cpc	r1, r23
     fc0:	44 f5       	brge	.+80     	; 0x1012 <_Z9UDP_checkPci+0xb6>
     fc2:	ef 01       	movw	r28, r30
     fc4:	aa 96       	adiw	r28, 0x2a	; 42
     fc6:	df 01       	movw	r26, r30
     fc8:	6e 0f       	add	r22, r30
     fca:	7f 1f       	adc	r23, r31
		{
			data[x]=data[42+x];
     fcc:	29 91       	ld	r18, Y+
     fce:	2d 93       	st	X+, r18
	}
	
	else if ((data[12]==0x08)&&(data[13]==0x00)&&(data[23]==0x11)&&(data[30]==My_IP[0])&&(data[31]==My_IP[1])&&(data[32]==My_IP[2])&&(data[33]==My_IP[3])&&(data[36]== PORTH)&&(data[37]==PORTL))
	{
		data_length = ((data[38]<<8) | ( 0xFF & data[39])) -8 ;
		for (int x = 0; x<length;x++)
     fd0:	a6 17       	cp	r26, r22
     fd2:	b7 07       	cpc	r27, r23
     fd4:	d9 f7       	brne	.-10     	; 0xfcc <_Z9UDP_checkPci+0x70>
     fd6:	1d c0       	rjmp	.+58     	; 0x1012 <_Z9UDP_checkPci+0xb6>
int UDP_check(char data[], int length)
{
	uint16_t data_length;
	if (length<42)
	{
		return 0;
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	1a c0       	rjmp	.+52     	; 0x1012 <_Z9UDP_checkPci+0xb6>
			data[x]=data[42+x];
		}
		return data_length;
	}
	else
	return 0;
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	17 c0       	rjmp	.+46     	; 0x1012 <_Z9UDP_checkPci+0xb6>
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	14 c0       	rjmp	.+40     	; 0x1012 <_Z9UDP_checkPci+0xb6>
     fea:	80 e0       	ldi	r24, 0x00	; 0
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	11 c0       	rjmp	.+34     	; 0x1012 <_Z9UDP_checkPci+0xb6>
     ff0:	80 e0       	ldi	r24, 0x00	; 0
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	0e c0       	rjmp	.+28     	; 0x1012 <_Z9UDP_checkPci+0xb6>
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	0b c0       	rjmp	.+22     	; 0x1012 <_Z9UDP_checkPci+0xb6>
     ffc:	80 e0       	ldi	r24, 0x00	; 0
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	08 c0       	rjmp	.+16     	; 0x1012 <_Z9UDP_checkPci+0xb6>
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	05 c0       	rjmp	.+10     	; 0x1012 <_Z9UDP_checkPci+0xb6>
    1008:	80 e0       	ldi	r24, 0x00	; 0
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <_Z9UDP_checkPci+0xb6>
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	90 e0       	ldi	r25, 0x00	; 0
}
    1012:	df 91       	pop	r29
    1014:	cf 91       	pop	r28
    1016:	08 95       	ret

00001018 <_Z8UDP_sendPcji>:

bool UDP_send(char data[], uint16_t length, int number)		// Use number = 10 
{
    1018:	0f 93       	push	r16
    101a:	1f 93       	push	r17
    101c:	cf 93       	push	r28
    101e:	df 93       	push	r29
    1020:	cd b7       	in	r28, 0x3d	; 61
    1022:	de b7       	in	r29, 0x3e	; 62
    1024:	c0 54       	subi	r28, 0x40	; 64
    1026:	d6 40       	sbci	r29, 0x06	; 6
    1028:	0f b6       	in	r0, 0x3f	; 63
    102a:	f8 94       	cli
    102c:	de bf       	out	0x3e, r29	; 62
    102e:	0f be       	out	0x3f, r0	; 63
    1030:	cd bf       	out	0x3d, r28	; 61
	uint16_t total_data = length+28;
    1032:	8b 01       	movw	r16, r22
    1034:	04 5e       	subi	r16, 0xE4	; 228
    1036:	1f 4f       	sbci	r17, 0xFF	; 255
	
	char data_high, data_low;
	data_high= (total_data>>8);
	data_low= (total_data & 0xFF);
	
	total_data = length+8;	// For data length field
    1038:	ab 01       	movw	r20, r22
    103a:	48 5f       	subi	r20, 0xF8	; 248
    103c:	5f 4f       	sbci	r21, 0xFF	; 255
	
	for (x = 0;x<length;x++)
    103e:	61 15       	cp	r22, r1
    1040:	71 05       	cpc	r23, r1
    1042:	79 f0       	breq	.+30     	; 0x1062 <_Z8UDP_sendPcji+0x4a>
    1044:	a8 2f       	mov	r26, r24
    1046:	b9 2f       	mov	r27, r25
    1048:	fe 01       	movw	r30, r28
    104a:	7d 96       	adiw	r30, 0x1d	; 29
    104c:	21 e0       	ldi	r18, 0x01	; 1
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	2c 0f       	add	r18, r28
    1052:	3d 1f       	adc	r19, r29
    1054:	20 0f       	add	r18, r16
    1056:	31 1f       	adc	r19, r17
	{
		new_data[28+x]=data[x];
    1058:	8d 91       	ld	r24, X+
    105a:	81 93       	st	Z+, r24
	data_high= (total_data>>8);
	data_low= (total_data & 0xFF);
	
	total_data = length+8;	// For data length field
	
	for (x = 0;x<length;x++)
    105c:	e2 17       	cp	r30, r18
    105e:	f3 07       	cpc	r31, r19
    1060:	d9 f7       	brne	.-10     	; 0x1058 <_Z8UDP_sendPcji+0x40>
	{
		new_data[28+x]=data[x];
	}	
	new_data[28+x]= 0x00;	//Extra one byte for CRC checking
    1062:	fe 01       	movw	r30, r28
    1064:	e6 0f       	add	r30, r22
    1066:	f7 1f       	adc	r31, r23
    1068:	15 8e       	std	Z+29, r1	; 0x1d
	
	
	
	//	IP header starts
	
	new_data[0]= 0x45;
    106a:	85 e4       	ldi	r24, 0x45	; 69
    106c:	89 83       	std	Y+1, r24	; 0x01
	new_data[1]= 0x00;
    106e:	1a 82       	std	Y+2, r1	; 0x02
	new_data[2]=data_high;
    1070:	1b 83       	std	Y+3, r17	; 0x03
	new_data[3]=data_low;
    1072:	0c 83       	std	Y+4, r16	; 0x04
	new_data[4]=0x1A;				//	Arbitrary ID= 0x1010
    1074:	8a e1       	ldi	r24, 0x1A	; 26
    1076:	8d 83       	std	Y+5, r24	; 0x05
	new_data[5]=0x30;				//	
    1078:	80 e3       	ldi	r24, 0x30	; 48
    107a:	8e 83       	std	Y+6, r24	; 0x06
	new_data[6]=0x00;
    107c:	1f 82       	std	Y+7, r1	; 0x07
	new_data[7]=0x00;
    107e:	18 86       	std	Y+8, r1	; 0x08
	new_data[8]=0x80;			//	Time to Live
    1080:	90 e8       	ldi	r25, 0x80	; 128
    1082:	99 87       	std	Y+9, r25	; 0x09
	new_data[9]=0x11;			// UDP
    1084:	91 e1       	ldi	r25, 0x11	; 17
    1086:	9a 87       	std	Y+10, r25	; 0x0a
	new_data[10]=0x00;			// IP checksum 10,11
    1088:	1b 86       	std	Y+11, r1	; 0x0b
	new_data[11]=0x00;
    108a:	1c 86       	std	Y+12, r1	; 0x0c
	
	//	UDP header starts
	
	new_data[12]=My_IP[0];
    108c:	e7 e0       	ldi	r30, 0x07	; 7
    108e:	f1 e0       	ldi	r31, 0x01	; 1
    1090:	90 81       	ld	r25, Z
    1092:	9d 87       	std	Y+13, r25	; 0x0d
	new_data[13]=My_IP[1];
    1094:	91 81       	ldd	r25, Z+1	; 0x01
    1096:	9e 87       	std	Y+14, r25	; 0x0e
	new_data[14]=My_IP[2];
    1098:	92 81       	ldd	r25, Z+2	; 0x02
    109a:	9f 87       	std	Y+15, r25	; 0x0f
	new_data[15]=My_IP[3];
    109c:	93 81       	ldd	r25, Z+3	; 0x03
    109e:	98 8b       	std	Y+16, r25	; 0x10
	new_data[16]=Dest_IP[0];
    10a0:	eb e0       	ldi	r30, 0x0B	; 11
    10a2:	f1 e0       	ldi	r31, 0x01	; 1
    10a4:	90 81       	ld	r25, Z
    10a6:	99 8b       	std	Y+17, r25	; 0x11
	new_data[17]=Dest_IP[1];
    10a8:	91 81       	ldd	r25, Z+1	; 0x01
    10aa:	9a 8b       	std	Y+18, r25	; 0x12
	new_data[18]=Dest_IP[2];
    10ac:	92 81       	ldd	r25, Z+2	; 0x02
    10ae:	9b 8b       	std	Y+19, r25	; 0x13
	new_data[19]=Dest_IP[3];	
    10b0:	93 81       	ldd	r25, Z+3	; 0x03
    10b2:	9c 8b       	std	Y+20, r25	; 0x14
				
	// IP header finish
	
	new_data[20]=0xF6;			// ID
    10b4:	96 ef       	ldi	r25, 0xF6	; 246
    10b6:	9d 8b       	std	Y+21, r25	; 0x15
	new_data[21]=0x30;
    10b8:	8e 8b       	std	Y+22, r24	; 0x16
	new_data[22]=PORTH;
    10ba:	1f 8a       	std	Y+23, r1	; 0x17
	new_data[23]=PORTL;
    10bc:	84 e6       	ldi	r24, 0x64	; 100
    10be:	88 8f       	std	Y+24, r24	; 0x18
	new_data[24]=((total_data>>8) & 0xFF);
    10c0:	59 8f       	std	Y+25, r21	; 0x19
	new_data[25]=(total_data & 0xFF);
    10c2:	4a 8f       	std	Y+26, r20	; 0x1a
	new_data[26]=0x00;			//	UDP Checksum 26, 27
    10c4:	1b 8e       	std	Y+27, r1	; 0x1b
	new_data[27]=0x00;
    10c6:	1c 8e       	std	Y+28, r1	; 0x1c
	//	UDP header finish
	
	total_data = length+28;
	
	// IP checksum calculation
	checksum_value= checksum(new_data,0,19);			// Minus korsi milanor jonno. jani na keno always ek beshi ashe
    10c8:	43 e1       	ldi	r20, 0x13	; 19
    10ca:	50 e0       	ldi	r21, 0x00	; 0
    10cc:	60 e0       	ldi	r22, 0x00	; 0
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	ce 01       	movw	r24, r28
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	1d d8       	rcall	.-4038   	; 0x110 <_Z8checksumPcjj>
	
	new_data[10]= (checksum_value>>8) & 0xFF;
    10d6:	9b 87       	std	Y+11, r25	; 0x0b
	new_data[11]= (checksum_value & 0xFF);
    10d8:	8c 87       	std	Y+12, r24	; 0x0c
	// UDP checksum calculation
	// Optional for IPv4
	
	
	//	Transmit
	bool Ans = ENC_Transmit(new_data, total_data ,'I');
    10da:	49 e4       	ldi	r20, 0x49	; 73
    10dc:	b8 01       	movw	r22, r16
    10de:	ce 01       	movw	r24, r28
    10e0:	01 96       	adiw	r24, 0x01	; 1
    10e2:	bb d9       	rcall	.-3210   	; 0x45a <_Z12ENC_TransmitPcjc>
	return Ans;
}
    10e4:	c0 5c       	subi	r28, 0xC0	; 192
    10e6:	d9 4f       	sbci	r29, 0xF9	; 249
    10e8:	0f b6       	in	r0, 0x3f	; 63
    10ea:	f8 94       	cli
    10ec:	de bf       	out	0x3e, r29	; 62
    10ee:	0f be       	out	0x3f, r0	; 63
    10f0:	cd bf       	out	0x3d, r28	; 61
    10f2:	df 91       	pop	r29
    10f4:	cf 91       	pop	r28
    10f6:	1f 91       	pop	r17
    10f8:	0f 91       	pop	r16
    10fa:	08 95       	ret

000010fc <__vector_13>:
	}

}

ISR(TIMER1_COMPB_vect)
{
    10fc:	1f 92       	push	r1
    10fe:	0f 92       	push	r0
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	0f 92       	push	r0
    1104:	11 24       	eor	r1, r1
    1106:	0b b6       	in	r0, 0x3b	; 59
    1108:	0f 92       	push	r0
    110a:	0f 93       	push	r16
    110c:	2f 93       	push	r18
    110e:	3f 93       	push	r19
    1110:	4f 93       	push	r20
    1112:	5f 93       	push	r21
    1114:	6f 93       	push	r22
    1116:	7f 93       	push	r23
    1118:	8f 93       	push	r24
    111a:	9f 93       	push	r25
    111c:	af 93       	push	r26
    111e:	bf 93       	push	r27
    1120:	ef 93       	push	r30
    1122:	ff 93       	push	r31
	heartbit_LED_PORT ^=(1<<heartbit_LED);
    1124:	8b b3       	in	r24, 0x1b	; 27
    1126:	80 58       	subi	r24, 0x80	; 128
    1128:	8b bb       	out	0x1b, r24	; 27
	if ((Outgoing_byte_count>0)& (connected==true))
    112a:	60 91 57 01 	lds	r22, 0x0157
    112e:	70 91 58 01 	lds	r23, 0x0158
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	61 15       	cp	r22, r1
    1136:	71 05       	cpc	r23, r1
    1138:	09 f4       	brne	.+2      	; 0x113c <__stack+0x3d>
    113a:	80 e0       	ldi	r24, 0x00	; 0
    113c:	88 23       	and	r24, r24
    113e:	71 f0       	breq	.+28     	; 0x115c <__stack+0x5d>
    1140:	80 91 4f 05 	lds	r24, 0x054F
    1144:	88 23       	and	r24, r24
    1146:	51 f0       	breq	.+20     	; 0x115c <__stack+0x5d>
	{
		Make_TCP_Packet(Serial_Data,Outgoing_byte_count,false,true,true);
    1148:	01 e0       	ldi	r16, 0x01	; 1
    114a:	21 e0       	ldi	r18, 0x01	; 1
    114c:	40 e0       	ldi	r20, 0x00	; 0
    114e:	8d e5       	ldi	r24, 0x5D	; 93
    1150:	91 e0       	ldi	r25, 0x01	; 1
    1152:	09 da       	rcall	.-3054   	; 0x566 <_Z15Make_TCP_PacketPcibbb>
		Outgoing_byte_count=0;
    1154:	10 92 58 01 	sts	0x0158, r1
    1158:	10 92 57 01 	sts	0x0157, r1
	}
}
    115c:	ff 91       	pop	r31
    115e:	ef 91       	pop	r30
    1160:	bf 91       	pop	r27
    1162:	af 91       	pop	r26
    1164:	9f 91       	pop	r25
    1166:	8f 91       	pop	r24
    1168:	7f 91       	pop	r23
    116a:	6f 91       	pop	r22
    116c:	5f 91       	pop	r21
    116e:	4f 91       	pop	r20
    1170:	3f 91       	pop	r19
    1172:	2f 91       	pop	r18
    1174:	0f 91       	pop	r16
    1176:	0f 90       	pop	r0
    1178:	0b be       	out	0x3b, r0	; 59
    117a:	0f 90       	pop	r0
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	0f 90       	pop	r0
    1180:	1f 90       	pop	r1
    1182:	18 95       	reti

00001184 <_Z15change_settingsb>:
	sei();				// Turn on Interrupt
}


void change_settings(bool Method)
{
    1184:	0f 93       	push	r16
    1186:	1f 93       	push	r17
    1188:	cf 93       	push	r28
    118a:	df 93       	push	r29
	if (Serial_Data[1]== MAC_Change)
    118c:	90 91 5e 01 	lds	r25, 0x015E
    1190:	90 31       	cpi	r25, 0x10	; 16
    1192:	81 f5       	brne	.+96     	; 0x11f4 <_Z15change_settingsb+0x70>
	{
		Settings_LED_PORT &= ~(1<<Settings_LED);
    1194:	af 98       	cbi	0x15, 7	; 21
		
		// send "OK"  Ack sending 1st, because after changing, It won't communicate.
		if (Method==true)			// Serial
    1196:	88 23       	and	r24, r24
    1198:	91 f0       	breq	.+36     	; 0x11be <_Z15change_settingsb+0x3a>
		{
			UDR1= MAC_Change;
    119a:	80 e1       	ldi	r24, 0x10	; 16
    119c:	80 93 9c 00 	sts	0x009C, r24
			while( !( UCSR1A & (1<<UDRE1)) );
    11a0:	eb e9       	ldi	r30, 0x9B	; 155
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	80 81       	ld	r24, Z
    11a6:	85 ff       	sbrs	r24, 5
    11a8:	fd cf       	rjmp	.-6      	; 0x11a4 <_Z15change_settingsb+0x20>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11aa:	2f ef       	ldi	r18, 0xFF	; 255
    11ac:	89 ef       	ldi	r24, 0xF9	; 249
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	21 50       	subi	r18, 0x01	; 1
    11b2:	80 40       	sbci	r24, 0x00	; 0
    11b4:	90 40       	sbci	r25, 0x00	; 0
    11b6:	e1 f7       	brne	.-8      	; 0x11b0 <_Z15change_settingsb+0x2c>
    11b8:	00 c0       	rjmp	.+0      	; 0x11ba <_Z15change_settingsb+0x36>
    11ba:	00 00       	nop
    11bc:	84 c0       	rjmp	.+264    	; 0x12c6 <_Z15change_settingsb+0x142>
			_delay_ms(20);
		}
		else
		{
			UDP_send("Changed MAC",11,10);
    11be:	4a e0       	ldi	r20, 0x0A	; 10
    11c0:	50 e0       	ldi	r21, 0x00	; 0
    11c2:	6b e0       	ldi	r22, 0x0B	; 11
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	8b e1       	ldi	r24, 0x1B	; 27
    11c8:	91 e0       	ldi	r25, 0x01	; 1
    11ca:	26 df       	rcall	.-436    	; 0x1018 <_Z8UDP_sendPcji>
    11cc:	7c c0       	rjmp	.+248    	; 0x12c6 <_Z15change_settingsb+0x142>
		}
		
		for (char x=0;x<6;x++)
		{
			MAC[x]= ENC_Data[2+x];
    11ce:	81 91       	ld	r24, Z+
    11d0:	8d 93       	st	X+, r24
		else
		{
			UDP_send("Changed MAC",11,10);
		}
		
		for (char x=0;x<6;x++)
    11d2:	e2 17       	cp	r30, r18
    11d4:	f3 07       	cpc	r31, r19
    11d6:	d9 f7       	brne	.-10     	; 0x11ce <_Z15change_settingsb+0x4a>
    11d8:	c0 e0       	ldi	r28, 0x00	; 0
    11da:	d0 e0       	ldi	r29, 0x00	; 0
			MAC[x]= ENC_Data[2+x];
		}
		
		for (uint8_t x=0;x<6;x++)				// MAC Write
		{
			eeprom_write_byte(( uint8_t *)x,MAC[x]);
    11dc:	f8 01       	movw	r30, r16
    11de:	61 91       	ld	r22, Z+
    11e0:	8f 01       	movw	r16, r30
    11e2:	ce 01       	movw	r24, r28
    11e4:	22 d2       	rcall	.+1092   	; 0x162a <eeprom_write_byte>
    11e6:	21 96       	adiw	r28, 0x01	; 1
		for (char x=0;x<6;x++)
		{
			MAC[x]= ENC_Data[2+x];
		}
		
		for (uint8_t x=0;x<6;x++)				// MAC Write
    11e8:	c6 30       	cpi	r28, 0x06	; 6
    11ea:	d1 05       	cpc	r29, r1
    11ec:	b9 f7       	brne	.-18     	; 0x11dc <_Z15change_settingsb+0x58>
		{
			eeprom_write_byte(( uint8_t *)x,MAC[x]);
		}
		
		ENC_init();
    11ee:	4a d8       	rcall	.-3948   	; 0x284 <_Z8ENC_initv>
		
		Settings_LED_PORT |= (1<<Settings_LED);
    11f0:	af 9a       	sbi	0x15, 7	; 21
    11f2:	88 c0       	rjmp	.+272    	; 0x1304 <_Z15change_settingsb+0x180>
		
	}
	else if (Serial_Data[1]== IP_Change)
    11f4:	90 32       	cpi	r25, 0x20	; 32
    11f6:	41 f5       	brne	.+80     	; 0x1248 <_Z15change_settingsb+0xc4>
	{
		
		Settings_LED_PORT &= ~(1<<Settings_LED);
    11f8:	af 98       	cbi	0x15, 7	; 21
		
		// send "OK"  Ack sending 1st, because after changing, It won't communicate.
		if (Method==true)			// Serial
    11fa:	88 23       	and	r24, r24
    11fc:	91 f0       	breq	.+36     	; 0x1222 <_Z15change_settingsb+0x9e>
		{
			UDR1= IP_Change;
    11fe:	80 e2       	ldi	r24, 0x20	; 32
    1200:	80 93 9c 00 	sts	0x009C, r24
			while( !( UCSR1A & (1<<UDRE1)) );
    1204:	eb e9       	ldi	r30, 0x9B	; 155
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	80 81       	ld	r24, Z
    120a:	85 ff       	sbrs	r24, 5
    120c:	fd cf       	rjmp	.-6      	; 0x1208 <_Z15change_settingsb+0x84>
    120e:	ff ef       	ldi	r31, 0xFF	; 255
    1210:	29 ef       	ldi	r18, 0xF9	; 249
    1212:	80 e0       	ldi	r24, 0x00	; 0
    1214:	f1 50       	subi	r31, 0x01	; 1
    1216:	20 40       	sbci	r18, 0x00	; 0
    1218:	80 40       	sbci	r24, 0x00	; 0
    121a:	e1 f7       	brne	.-8      	; 0x1214 <_Z15change_settingsb+0x90>
    121c:	00 c0       	rjmp	.+0      	; 0x121e <_Z15change_settingsb+0x9a>
    121e:	00 00       	nop
    1220:	5a c0       	rjmp	.+180    	; 0x12d6 <_Z15change_settingsb+0x152>
			_delay_ms(20);
		}
		else
		{
			UDP_send("Changed IP",10,10);
    1222:	4a e0       	ldi	r20, 0x0A	; 10
    1224:	50 e0       	ldi	r21, 0x00	; 0
    1226:	6a e0       	ldi	r22, 0x0A	; 10
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	87 e2       	ldi	r24, 0x27	; 39
    122c:	91 e0       	ldi	r25, 0x01	; 1
    122e:	f4 de       	rcall	.-536    	; 0x1018 <_Z8UDP_sendPcji>
    1230:	52 c0       	rjmp	.+164    	; 0x12d6 <_Z15change_settingsb+0x152>
		}
		
		
		for (uint8_t x=0;x<4;x++)				// IP Write
		{
			eeprom_write_byte((( uint8_t *)6+x),My_IP[x]);
    1232:	f8 01       	movw	r30, r16
    1234:	61 91       	ld	r22, Z+
    1236:	8f 01       	movw	r16, r30
    1238:	ce 01       	movw	r24, r28
    123a:	f7 d1       	rcall	.+1006   	; 0x162a <eeprom_write_byte>
    123c:	21 96       	adiw	r28, 0x01	; 1
		{
			My_IP[x]= ENC_Data[2+x];
		}
		
		
		for (uint8_t x=0;x<4;x++)				// IP Write
    123e:	ca 30       	cpi	r28, 0x0A	; 10
    1240:	d1 05       	cpc	r29, r1
    1242:	b9 f7       	brne	.-18     	; 0x1232 <_Z15change_settingsb+0xae>
		{
			eeprom_write_byte((( uint8_t *)6+x),My_IP[x]);
		}
		
		Settings_LED_PORT |= (1<<Settings_LED);
    1244:	af 9a       	sbi	0x15, 7	; 21
    1246:	5e c0       	rjmp	.+188    	; 0x1304 <_Z15change_settingsb+0x180>
	}
	
	else if (Serial_Data[1]== Module_Restart)
    1248:	90 34       	cpi	r25, 0x40	; 64
    124a:	01 f5       	brne	.+64     	; 0x128c <_Z15change_settingsb+0x108>
	{
		
		Settings_LED_PORT &= ~(1<<Settings_LED);
    124c:	af 98       	cbi	0x15, 7	; 21
		// send "OK"
		if (Method==true)			// Serial
    124e:	88 23       	and	r24, r24
    1250:	91 f0       	breq	.+36     	; 0x1276 <_Z15change_settingsb+0xf2>
		{
			UDR1= Module_Restart;
    1252:	80 e4       	ldi	r24, 0x40	; 64
    1254:	80 93 9c 00 	sts	0x009C, r24
			while( !( UCSR1A & (1<<UDRE1)) );
    1258:	eb e9       	ldi	r30, 0x9B	; 155
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	80 81       	ld	r24, Z
    125e:	85 ff       	sbrs	r24, 5
    1260:	fd cf       	rjmp	.-6      	; 0x125c <_Z15change_settingsb+0xd8>
    1262:	ff ef       	ldi	r31, 0xFF	; 255
    1264:	29 ef       	ldi	r18, 0xF9	; 249
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	f1 50       	subi	r31, 0x01	; 1
    126a:	20 40       	sbci	r18, 0x00	; 0
    126c:	80 40       	sbci	r24, 0x00	; 0
    126e:	e1 f7       	brne	.-8      	; 0x1268 <_Z15change_settingsb+0xe4>
    1270:	00 c0       	rjmp	.+0      	; 0x1272 <_Z15change_settingsb+0xee>
    1272:	00 00       	nop
    1274:	07 c0       	rjmp	.+14     	; 0x1284 <_Z15change_settingsb+0x100>
			_delay_ms(20);
		}
		else
		{
			UDP_send("Module is restarted",19,10);
    1276:	4a e0       	ldi	r20, 0x0A	; 10
    1278:	50 e0       	ldi	r21, 0x00	; 0
    127a:	63 e1       	ldi	r22, 0x13	; 19
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	82 e3       	ldi	r24, 0x32	; 50
    1280:	91 e0       	ldi	r25, 0x01	; 1
    1282:	ca de       	rcall	.-620    	; 0x1018 <_Z8UDP_sendPcji>
		}
		ENC_init();
    1284:	0e 94 42 01 	call	0x284	; 0x284 <_Z8ENC_initv>
		Settings_LED_PORT |= (1<<Settings_LED);
    1288:	af 9a       	sbi	0x15, 7	; 21
    128a:	3c c0       	rjmp	.+120    	; 0x1304 <_Z15change_settingsb+0x180>
	}
	
	else
	{	
		Settings_LED_PORT &= ~(1<<Settings_LED);
    128c:	af 98       	cbi	0x15, 7	; 21
		
		// send "??"
		if (Method==true)			// Serial
    128e:	88 23       	and	r24, r24
    1290:	89 f0       	breq	.+34     	; 0x12b4 <_Z15change_settingsb+0x130>
		{
			UDR1= 0x00;
    1292:	10 92 9c 00 	sts	0x009C, r1
			while( !( UCSR1A & (1<<UDRE1)) );
    1296:	eb e9       	ldi	r30, 0x9B	; 155
    1298:	f0 e0       	ldi	r31, 0x00	; 0
    129a:	80 81       	ld	r24, Z
    129c:	85 ff       	sbrs	r24, 5
    129e:	fd cf       	rjmp	.-6      	; 0x129a <_Z15change_settingsb+0x116>
    12a0:	9f ef       	ldi	r25, 0xFF	; 255
    12a2:	e9 ef       	ldi	r30, 0xF9	; 249
    12a4:	f0 e0       	ldi	r31, 0x00	; 0
    12a6:	91 50       	subi	r25, 0x01	; 1
    12a8:	e0 40       	sbci	r30, 0x00	; 0
    12aa:	f0 40       	sbci	r31, 0x00	; 0
    12ac:	e1 f7       	brne	.-8      	; 0x12a6 <_Z15change_settingsb+0x122>
    12ae:	00 c0       	rjmp	.+0      	; 0x12b0 <_Z15change_settingsb+0x12c>
    12b0:	00 00       	nop
    12b2:	07 c0       	rjmp	.+14     	; 0x12c2 <_Z15change_settingsb+0x13e>
			_delay_ms(20);
		}
		else
		{
			UDP_send("Unknown Command",15,10);
    12b4:	4a e0       	ldi	r20, 0x0A	; 10
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	6f e0       	ldi	r22, 0x0F	; 15
    12ba:	70 e0       	ldi	r23, 0x00	; 0
    12bc:	86 e4       	ldi	r24, 0x46	; 70
    12be:	91 e0       	ldi	r25, 0x01	; 1
    12c0:	ab de       	rcall	.-682    	; 0x1018 <_Z8UDP_sendPcji>
		}
		Settings_LED_PORT |= (1<<Settings_LED);
    12c2:	af 9a       	sbi	0x15, 7	; 21
    12c4:	1f c0       	rjmp	.+62     	; 0x1304 <_Z15change_settingsb+0x180>
    12c6:	e3 e5       	ldi	r30, 0x53	; 83
    12c8:	f3 e0       	ldi	r31, 0x03	; 3
    12ca:	05 e1       	ldi	r16, 0x15	; 21
    12cc:	11 e0       	ldi	r17, 0x01	; 1
    12ce:	29 e5       	ldi	r18, 0x59	; 89
    12d0:	33 e0       	ldi	r19, 0x03	; 3
	sei();				// Turn on Interrupt
}


void change_settings(bool Method)
{
    12d2:	d8 01       	movw	r26, r16
    12d4:	7c cf       	rjmp	.-264    	; 0x11ce <_Z15change_settingsb+0x4a>
			UDP_send("Changed IP",10,10);
		}
		
		for (char x=0;x<4;x++)
		{
			My_IP[x]= ENC_Data[2+x];
    12d6:	e7 e0       	ldi	r30, 0x07	; 7
    12d8:	f1 e0       	ldi	r31, 0x01	; 1
    12da:	a1 e5       	ldi	r26, 0x51	; 81
    12dc:	b3 e0       	ldi	r27, 0x03	; 3
    12de:	12 96       	adiw	r26, 0x02	; 2
    12e0:	8c 91       	ld	r24, X
    12e2:	12 97       	sbiw	r26, 0x02	; 2
    12e4:	80 83       	st	Z, r24
    12e6:	13 96       	adiw	r26, 0x03	; 3
    12e8:	8c 91       	ld	r24, X
    12ea:	13 97       	sbiw	r26, 0x03	; 3
    12ec:	81 83       	std	Z+1, r24	; 0x01
    12ee:	14 96       	adiw	r26, 0x04	; 4
    12f0:	8c 91       	ld	r24, X
    12f2:	14 97       	sbiw	r26, 0x04	; 4
    12f4:	82 83       	std	Z+2, r24	; 0x02
    12f6:	15 96       	adiw	r26, 0x05	; 5
    12f8:	8c 91       	ld	r24, X
    12fa:	83 83       	std	Z+3, r24	; 0x03
    12fc:	8f 01       	movw	r16, r30
    12fe:	c6 e0       	ldi	r28, 0x06	; 6
    1300:	d0 e0       	ldi	r29, 0x00	; 0
    1302:	97 cf       	rjmp	.-210    	; 0x1232 <_Z15change_settingsb+0xae>
		{
			UDP_send("Unknown Command",15,10);
		}
		Settings_LED_PORT |= (1<<Settings_LED);
	}
}
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	1f 91       	pop	r17
    130a:	0f 91       	pop	r16
    130c:	08 95       	ret

0000130e <main>:
bool pre_connection = false;
void change_settings(bool Method);		// Method = True for Serial, False for UDP

int main()
{
	heartbit_LED_DATA |= (1<<heartbit_LED);
    130e:	d7 9a       	sbi	0x1a, 7	; 26
	Connection_LED_DATA |= (1<<Connection_LED);
    1310:	8f 9a       	sbi	0x11, 7	; 17
	Settings_LED_DATA |= (1<< Settings_LED);	
    1312:	a7 9a       	sbi	0x14, 7	; 20
	Settings_switch_DATA &=~(1<< Settings_switch);
    1314:	16 98       	cbi	0x02, 6	; 2
	
	heartbit_LED_PORT |= (1<<heartbit_LED);
    1316:	df 9a       	sbi	0x1b, 7	; 27
	Connection_LED_PORT |= (1<<Connection_LED);
    1318:	97 9a       	sbi	0x12, 7	; 18
	Settings_LED_PORT |= (1<< Settings_LED);
    131a:	af 9a       	sbi	0x15, 7	; 21
	Settings_switch_PORT &= ~ (1<< Settings_switch);					// Makes it Low. So that rising can be detected
    131c:	1e 98       	cbi	0x03, 6	; 3
	
	// Heart Beat LED
	TCCR1B |= 1<<CS10 | 1<<CS12 | 1<<WGM12; // Heart beat LED
    131e:	8e b5       	in	r24, 0x2e	; 46
    1320:	8d 60       	ori	r24, 0x0D	; 13
    1322:	8e bd       	out	0x2e, r24	; 46
	OCR1A= 14000;  // 10 millisecond interval.
    1324:	80 eb       	ldi	r24, 0xB0	; 176
    1326:	96 e3       	ldi	r25, 0x36	; 54
    1328:	9b bd       	out	0x2b, r25	; 43
    132a:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= 1<< OCIE1B;    //	Channel 1, Heart beat LED Enabled.
    132c:	87 b7       	in	r24, 0x37	; 55
    132e:	88 60       	ori	r24, 0x08	; 8
    1330:	87 bf       	out	0x37, r24	; 55
	
	if ((eeprom_read_byte(0x00)==0xFF)|(eeprom_read_byte(0x00)==0x00))		// First time. Write default
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	71 d1       	rcall	.+738    	; 0x161a <eeprom_read_byte>
    1338:	81 50       	subi	r24, 0x01	; 1
    133a:	8e 3f       	cpi	r24, 0xFE	; 254
    133c:	c8 f0       	brcs	.+50     	; 0x1370 <main+0x62>
    133e:	05 e1       	ldi	r16, 0x15	; 21
    1340:	11 e0       	ldi	r17, 0x01	; 1
    1342:	c0 e0       	ldi	r28, 0x00	; 0
    1344:	d0 e0       	ldi	r29, 0x00	; 0
	{
		for ( char x=0;x<6;x++)				// MAC Write
		{
			eeprom_write_byte(( uint8_t *)x,MAC[x]);
    1346:	d8 01       	movw	r26, r16
    1348:	6d 91       	ld	r22, X+
    134a:	8d 01       	movw	r16, r26
    134c:	ce 01       	movw	r24, r28
    134e:	6d d1       	rcall	.+730    	; 0x162a <eeprom_write_byte>
    1350:	21 96       	adiw	r28, 0x01	; 1
	OCR1A= 14000;  // 10 millisecond interval.
	TIMSK |= 1<< OCIE1B;    //	Channel 1, Heart beat LED Enabled.
	
	if ((eeprom_read_byte(0x00)==0xFF)|(eeprom_read_byte(0x00)==0x00))		// First time. Write default
	{
		for ( char x=0;x<6;x++)				// MAC Write
    1352:	c6 30       	cpi	r28, 0x06	; 6
    1354:	d1 05       	cpc	r29, r1
    1356:	b9 f7       	brne	.-18     	; 0x1346 <main+0x38>
    1358:	07 e0       	ldi	r16, 0x07	; 7
    135a:	11 e0       	ldi	r17, 0x01	; 1
			eeprom_write_byte(( uint8_t *)x,MAC[x]);
		}
		
		for (char x=0;x<4;x++)				// IP Write
		{
			eeprom_write_byte(( uint8_t *)(6+x),My_IP[x]);
    135c:	f8 01       	movw	r30, r16
    135e:	61 91       	ld	r22, Z+
    1360:	8f 01       	movw	r16, r30
    1362:	ce 01       	movw	r24, r28
    1364:	62 d1       	rcall	.+708    	; 0x162a <eeprom_write_byte>
    1366:	21 96       	adiw	r28, 0x01	; 1
		for ( char x=0;x<6;x++)				// MAC Write
		{
			eeprom_write_byte(( uint8_t *)x,MAC[x]);
		}
		
		for (char x=0;x<4;x++)				// IP Write
    1368:	ca 30       	cpi	r28, 0x0A	; 10
    136a:	d1 05       	cpc	r29, r1
    136c:	b9 f7       	brne	.-18     	; 0x135c <main+0x4e>
    136e:	18 c0       	rjmp	.+48     	; 0x13a0 <main+0x92>
    1370:	05 e1       	ldi	r16, 0x15	; 21
    1372:	11 e0       	ldi	r17, 0x01	; 1
	// Heart Beat LED
	TCCR1B |= 1<<CS10 | 1<<CS12 | 1<<WGM12; // Heart beat LED
	OCR1A= 14000;  // 10 millisecond interval.
	TIMSK |= 1<< OCIE1B;    //	Channel 1, Heart beat LED Enabled.
	
	if ((eeprom_read_byte(0x00)==0xFF)|(eeprom_read_byte(0x00)==0x00))		// First time. Write default
    1374:	c0 e0       	ldi	r28, 0x00	; 0
    1376:	d0 e0       	ldi	r29, 0x00	; 0
	} 
	else									// Load from EEPROM
	{
		for ( uint8_t x=0;x<6;x++)				// MAC Read
		{
			MAC[x] = eeprom_read_byte(( uint8_t *)x);
    1378:	ce 01       	movw	r24, r28
    137a:	4f d1       	rcall	.+670    	; 0x161a <eeprom_read_byte>
    137c:	d8 01       	movw	r26, r16
    137e:	8d 93       	st	X+, r24
    1380:	8d 01       	movw	r16, r26
    1382:	21 96       	adiw	r28, 0x01	; 1
			eeprom_write_byte(( uint8_t *)(6+x),My_IP[x]);
		}
	} 
	else									// Load from EEPROM
	{
		for ( uint8_t x=0;x<6;x++)				// MAC Read
    1384:	c6 30       	cpi	r28, 0x06	; 6
    1386:	d1 05       	cpc	r29, r1
    1388:	b9 f7       	brne	.-18     	; 0x1378 <main+0x6a>
    138a:	07 e0       	ldi	r16, 0x07	; 7
    138c:	11 e0       	ldi	r17, 0x01	; 1
		{
			MAC[x] = eeprom_read_byte(( uint8_t *)x);
		}
		for (uint8_t x=0;x<4;x++)				// IP Read
		{
			My_IP[x] = eeprom_read_byte(( uint8_t *)6+ x);
    138e:	ce 01       	movw	r24, r28
    1390:	44 d1       	rcall	.+648    	; 0x161a <eeprom_read_byte>
    1392:	f8 01       	movw	r30, r16
    1394:	81 93       	st	Z+, r24
    1396:	8f 01       	movw	r16, r30
    1398:	21 96       	adiw	r28, 0x01	; 1
	{
		for ( uint8_t x=0;x<6;x++)				// MAC Read
		{
			MAC[x] = eeprom_read_byte(( uint8_t *)x);
		}
		for (uint8_t x=0;x<4;x++)				// IP Read
    139a:	ca 30       	cpi	r28, 0x0A	; 10
    139c:	d1 05       	cpc	r29, r1
    139e:	b9 f7       	brne	.-18     	; 0x138e <main+0x80>
		{
			My_IP[x] = eeprom_read_byte(( uint8_t *)6+ x);
		}
	}
	ENC_MasterInit();
    13a0:	0e 94 de 00 	call	0x1bc	; 0x1bc <_Z14ENC_MasterInitv>
	ENC_init();
    13a4:	0e 94 42 01 	call	0x284	; 0x284 <_Z8ENC_initv>
	serial_init();
    13a8:	0e 94 66 00 	call	0xcc	; 0xcc <_Z11serial_initv>
	
	// Interrupt on IN6 for EMU input
	EICRB |= 1<<ISC61 | 1<<ISC60;		// Rising edge
    13ac:	8a b7       	in	r24, 0x3a	; 58
    13ae:	80 63       	ori	r24, 0x30	; 48
    13b0:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= 1<<INT6;				// Enable INT6
    13b2:	89 b7       	in	r24, 0x39	; 57
    13b4:	80 64       	ori	r24, 0x40	; 64
    13b6:	89 bf       	out	0x39, r24	; 57
	sei();
    13b8:	78 94       	sei
    13ba:	0f 2e       	mov	r0, r31
    13bc:	fd e5       	ldi	r31, 0x5D	; 93
    13be:	6f 2e       	mov	r6, r31
    13c0:	f1 e0       	ldi	r31, 0x01	; 1
    13c2:	7f 2e       	mov	r7, r31
    13c4:	f0 2d       	mov	r31, r0
    13c6:	0f 2e       	mov	r0, r31
    13c8:	f5 e6       	ldi	r31, 0x65	; 101
    13ca:	ef 2e       	mov	r14, r31
    13cc:	f3 e0       	ldi	r31, 0x03	; 3
    13ce:	ff 2e       	mov	r15, r31
    13d0:	f0 2d       	mov	r31, r0
				if (Packet_length>0)
				{
					//Make_TCP_Packet(ENC_Data,Packet_length,false,true,true);
					for (uint16_t x=0;x<Packet_length;x++)
					{
						UDR1= ENC_Data[x];
    13d2:	0f 2e       	mov	r0, r31
    13d4:	fc e9       	ldi	r31, 0x9C	; 156
    13d6:	8f 2e       	mov	r8, r31
    13d8:	91 2c       	mov	r9, r1
    13da:	f0 2d       	mov	r31, r0
						while( !( UCSR1A & (1<<UDRE1)) );
    13dc:	cb e9       	ldi	r28, 0x9B	; 155
    13de:	d0 e0       	ldi	r29, 0x00	; 0
					UCSR1B |= (1 << RXCIE1 );			// Turn on Interrupt
					Connection_LED_PORT &=~(1<< Connection_LED);
				}
				else
				{
					OCR1A= 14000;
    13e0:	0f 2e       	mov	r0, r31
    13e2:	f0 eb       	ldi	r31, 0xB0	; 176
    13e4:	af 2e       	mov	r10, r31
    13e6:	f6 e3       	ldi	r31, 0x36	; 54
    13e8:	bf 2e       	mov	r11, r31
    13ea:	f0 2d       	mov	r31, r0
					Outgoing_byte_count=0;
					USART_Flush(true);
					UCSR1B &= ~(1 << RXCIE1 );			// Turn on Interrupt
    13ec:	0a e9       	ldi	r16, 0x9A	; 154
    13ee:	10 e0       	ldi	r17, 0x00	; 0
			
			if (pre_connection != connected)
			{
				if (connected==true)
				{
					OCR1A= 2800;
    13f0:	0f 2e       	mov	r0, r31
    13f2:	f0 ef       	ldi	r31, 0xF0	; 240
    13f4:	cf 2e       	mov	r12, r31
    13f6:	fa e0       	ldi	r31, 0x0A	; 10
    13f8:	df 2e       	mov	r13, r31
    13fa:	f0 2d       	mov	r31, r0
    13fc:	7b c0       	rjmp	.+246    	; 0x14f4 <main+0x1e6>
	while (1)
	{
		while (NewPacket()>0x00)
			{
			// Read the frame
			Packet_length = ENC_Receive(ENC_Data);	
    13fe:	81 e5       	ldi	r24, 0x51	; 81
    1400:	93 e0       	ldi	r25, 0x03	; 3
    1402:	0e 94 bb 01 	call	0x376	; 0x376 <_Z11ENC_ReceivePc>
    1406:	90 93 5c 01 	sts	0x015C, r25
    140a:	80 93 5b 01 	sts	0x015B, r24
			Core_Packet = Packet_length;
    140e:	90 93 5a 01 	sts	0x015A, r25
    1412:	80 93 59 01 	sts	0x0159, r24
			// Check if ARP			
			char IsARP=ARP_check(ENC_Data);  // Auto reply ARP		
    1416:	81 e5       	ldi	r24, 0x51	; 81
    1418:	93 e0       	ldi	r25, 0x03	; 3
    141a:	4c dd       	rcall	.-1384   	; 0xeb4 <_Z9ARP_checkPc>
			if (IsARP=='O')		// Other. But for me.
    141c:	8f 34       	cpi	r24, 0x4F	; 79
    141e:	09 f0       	breq	.+2      	; 0x1422 <main+0x114>
    1420:	40 c0       	rjmp	.+128    	; 0x14a2 <main+0x194>
				{
				// Check if TCP
				Packet_length=TCP_check(ENC_Data,Packet_length);	// Handles sending ACK and SYN+ACK 								
    1422:	60 91 5b 01 	lds	r22, 0x015B
    1426:	70 91 5c 01 	lds	r23, 0x015C
    142a:	81 e5       	ldi	r24, 0x51	; 81
    142c:	93 e0       	ldi	r25, 0x03	; 3
    142e:	26 db       	rcall	.-2484   	; 0xa7c <_Z9TCP_checkPci>
    1430:	90 93 5c 01 	sts	0x015C, r25
    1434:	80 93 5b 01 	sts	0x015B, r24
				if (Packet_length>0)
    1438:	89 2b       	or	r24, r25
    143a:	c1 f0       	breq	.+48     	; 0x146c <main+0x15e>
    143c:	e1 e5       	ldi	r30, 0x51	; 81
    143e:	f3 e0       	ldi	r31, 0x03	; 3
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
				{
					//Make_TCP_Packet(ENC_Data,Packet_length,false,true,true);
					for (uint16_t x=0;x<Packet_length;x++)
					{
						UDR1= ENC_Data[x];
    1444:	81 91       	ld	r24, Z+
    1446:	d4 01       	movw	r26, r8
    1448:	8c 93       	st	X, r24
						while( !( UCSR1A & (1<<UDRE1)) );
    144a:	88 81       	ld	r24, Y
    144c:	85 ff       	sbrs	r24, 5
    144e:	fd cf       	rjmp	.-6      	; 0x144a <main+0x13c>
				// Check if TCP
				Packet_length=TCP_check(ENC_Data,Packet_length);	// Handles sending ACK and SYN+ACK 								
				if (Packet_length>0)
				{
					//Make_TCP_Packet(ENC_Data,Packet_length,false,true,true);
					for (uint16_t x=0;x<Packet_length;x++)
    1450:	2f 5f       	subi	r18, 0xFF	; 255
    1452:	3f 4f       	sbci	r19, 0xFF	; 255
    1454:	80 91 5b 01 	lds	r24, 0x015B
    1458:	90 91 5c 01 	lds	r25, 0x015C
    145c:	28 17       	cp	r18, r24
    145e:	39 07       	cpc	r19, r25
    1460:	88 f3       	brcs	.-30     	; 0x1444 <main+0x136>
					{
						UDR1= ENC_Data[x];
						while( !( UCSR1A & (1<<UDRE1)) );
						
					}
					Packet_length=0;
    1462:	10 92 5c 01 	sts	0x015C, r1
    1466:	10 92 5b 01 	sts	0x015B, r1
    146a:	1b c0       	rjmp	.+54     	; 0x14a2 <main+0x194>
				}
				else
				{
					
				Packet_length = UDP_check(ENC_Data,Core_Packet);
    146c:	60 91 59 01 	lds	r22, 0x0159
    1470:	70 91 5a 01 	lds	r23, 0x015A
    1474:	81 e5       	ldi	r24, 0x51	; 81
    1476:	93 e0       	ldi	r25, 0x03	; 3
    1478:	71 dd       	rcall	.-1310   	; 0xf5c <_Z9UDP_checkPci>
    147a:	90 93 5c 01 	sts	0x015C, r25
    147e:	80 93 5b 01 	sts	0x015B, r24
				
				if (Packet_length>8)
    1482:	09 97       	sbiw	r24, 0x09	; 9
    1484:	50 f0       	brcs	.+20     	; 0x149a <main+0x18c>
    1486:	e1 e5       	ldi	r30, 0x51	; 81
    1488:	f3 e0       	ldi	r31, 0x03	; 3
    148a:	d3 01       	movw	r26, r6
				{
					for (char x=0;x<20;x++)
					{
						Serial_Data[x]= ENC_Data[x];
    148c:	81 91       	ld	r24, Z+
    148e:	8d 93       	st	X+, r24
					
				Packet_length = UDP_check(ENC_Data,Core_Packet);
				
				if (Packet_length>8)
				{
					for (char x=0;x<20;x++)
    1490:	ee 15       	cp	r30, r14
    1492:	ff 05       	cpc	r31, r15
    1494:	d9 f7       	brne	.-10     	; 0x148c <main+0x17e>
					{
						Serial_Data[x]= ENC_Data[x];
					}
					change_settings(false);
    1496:	80 e0       	ldi	r24, 0x00	; 0
    1498:	75 de       	rcall	.-790    	; 0x1184 <_Z15change_settingsb>
				}
				Packet_length=0;
    149a:	10 92 5c 01 	sts	0x015C, r1
    149e:	10 92 5b 01 	sts	0x015B, r1
										
				}
				
			}
			
			if (pre_connection != connected)
    14a2:	80 91 4f 05 	lds	r24, 0x054F
    14a6:	90 91 56 01 	lds	r25, 0x0156
    14aa:	98 17       	cp	r25, r24
    14ac:	f9 f0       	breq	.+62     	; 0x14ec <main+0x1de>
			{
				if (connected==true)
    14ae:	88 23       	and	r24, r24
    14b0:	79 f0       	breq	.+30     	; 0x14d0 <main+0x1c2>
				{
					OCR1A= 2800;
    14b2:	db bc       	out	0x2b, r13	; 43
    14b4:	ca bc       	out	0x2a, r12	; 42
					Outgoing_byte_count=0;
    14b6:	10 92 58 01 	sts	0x0158, r1
    14ba:	10 92 57 01 	sts	0x0157, r1
					USART_Flush(true);
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z11USART_Flushb>
					UCSR1B |= (1 << RXCIE1 );			// Turn on Interrupt
    14c4:	f8 01       	movw	r30, r16
    14c6:	80 81       	ld	r24, Z
    14c8:	80 68       	ori	r24, 0x80	; 128
    14ca:	80 83       	st	Z, r24
					Connection_LED_PORT &=~(1<< Connection_LED);
    14cc:	97 98       	cbi	0x12, 7	; 18
    14ce:	0e c0       	rjmp	.+28     	; 0x14ec <main+0x1de>
				}
				else
				{
					OCR1A= 14000;
    14d0:	bb bc       	out	0x2b, r11	; 43
    14d2:	aa bc       	out	0x2a, r10	; 42
					Outgoing_byte_count=0;
    14d4:	10 92 58 01 	sts	0x0158, r1
    14d8:	10 92 57 01 	sts	0x0157, r1
					USART_Flush(true);
    14dc:	81 e0       	ldi	r24, 0x01	; 1
    14de:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z11USART_Flushb>
					UCSR1B &= ~(1 << RXCIE1 );			// Turn on Interrupt
    14e2:	d8 01       	movw	r26, r16
    14e4:	8c 91       	ld	r24, X
    14e6:	8f 77       	andi	r24, 0x7F	; 127
    14e8:	8c 93       	st	X, r24
					Connection_LED_PORT |= (1<< Connection_LED);
    14ea:	97 9a       	sbi	0x12, 7	; 18
				}
			}
			pre_connection= connected;
    14ec:	80 91 4f 05 	lds	r24, 0x054F
    14f0:	80 93 56 01 	sts	0x0156, r24
	EICRB |= 1<<ISC61 | 1<<ISC60;		// Rising edge
	EIMSK |= 1<<INT6;				// Enable INT6
	sei();
	while (1)
	{
		while (NewPacket()>0x00)
    14f4:	32 d8       	rcall	.-3996   	; 0x55a <_Z9NewPacketv>
    14f6:	88 23       	and	r24, r24
    14f8:	e9 f3       	breq	.-6      	; 0x14f4 <main+0x1e6>
    14fa:	81 cf       	rjmp	.-254    	; 0x13fe <main+0xf0>

000014fc <__vector_7>:
		Outgoing_byte_count=0;
	}
}

ISR(INT6_vect)
{
    14fc:	1f 92       	push	r1
    14fe:	0f 92       	push	r0
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	0f 92       	push	r0
    1504:	11 24       	eor	r1, r1
    1506:	0b b6       	in	r0, 0x3b	; 59
    1508:	0f 92       	push	r0
    150a:	2f 93       	push	r18
    150c:	3f 93       	push	r19
    150e:	4f 93       	push	r20
    1510:	5f 93       	push	r21
    1512:	6f 93       	push	r22
    1514:	7f 93       	push	r23
    1516:	8f 93       	push	r24
    1518:	9f 93       	push	r25
    151a:	af 93       	push	r26
    151c:	bf 93       	push	r27
    151e:	cf 93       	push	r28
    1520:	df 93       	push	r29
    1522:	ef 93       	push	r30
    1524:	ff 93       	push	r31
	cli();				// Turn off Interrupt
    1526:	f8 94       	cli
	
	Settings_LED_PORT &= ~(1<<Settings_LED);	// Indicator of settings change
    1528:	af 98       	cbi	0x15, 7	; 21
	
	Outgoing_byte_count=0;
    152a:	10 92 58 01 	sts	0x0158, r1
    152e:	10 92 57 01 	sts	0x0157, r1
	while (Settings_switch_PIN & (1<< Settings_switch))
    1532:	0e 9b       	sbis	0x01, 6	; 1
    1534:	17 c0       	rjmp	.+46     	; 0x1564 <__vector_7+0x68>
	{
		while( !( UCSR1A & (1<<RXC1)) );		// Wait until comes
    1536:	eb e9       	ldi	r30, 0x9B	; 155
    1538:	f0 e0       	ldi	r31, 0x00	; 0
		Serial_Data[Outgoing_byte_count]= UDR1;	// Shove it into the Buffer
    153a:	cc e9       	ldi	r28, 0x9C	; 156
    153c:	d0 e0       	ldi	r29, 0x00	; 0
	Settings_LED_PORT &= ~(1<<Settings_LED);	// Indicator of settings change
	
	Outgoing_byte_count=0;
	while (Settings_switch_PIN & (1<< Settings_switch))
	{
		while( !( UCSR1A & (1<<RXC1)) );		// Wait until comes
    153e:	80 81       	ld	r24, Z
    1540:	88 23       	and	r24, r24
    1542:	ec f7       	brge	.-6      	; 0x153e <__vector_7+0x42>
		Serial_Data[Outgoing_byte_count]= UDR1;	// Shove it into the Buffer
    1544:	80 91 57 01 	lds	r24, 0x0157
    1548:	90 91 58 01 	lds	r25, 0x0158
    154c:	28 81       	ld	r18, Y
    154e:	dc 01       	movw	r26, r24
    1550:	a3 5a       	subi	r26, 0xA3	; 163
    1552:	be 4f       	sbci	r27, 0xFE	; 254
    1554:	2c 93       	st	X, r18
		Outgoing_byte_count++;
    1556:	01 96       	adiw	r24, 0x01	; 1
    1558:	90 93 58 01 	sts	0x0158, r25
    155c:	80 93 57 01 	sts	0x0157, r24
	cli();				// Turn off Interrupt
	
	Settings_LED_PORT &= ~(1<<Settings_LED);	// Indicator of settings change
	
	Outgoing_byte_count=0;
	while (Settings_switch_PIN & (1<< Settings_switch))
    1560:	0e 99       	sbic	0x01, 6	; 1
    1562:	ed cf       	rjmp	.-38     	; 0x153e <__vector_7+0x42>
	{
		while( !( UCSR1A & (1<<RXC1)) );		// Wait until comes
		Serial_Data[Outgoing_byte_count]= UDR1;	// Shove it into the Buffer
		Outgoing_byte_count++;
	}
	change_settings(true);
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	0e de       	rcall	.-996    	; 0x1184 <_Z15change_settingsb>
	Outgoing_byte_count=0;
    1568:	10 92 58 01 	sts	0x0158, r1
    156c:	10 92 57 01 	sts	0x0157, r1
	
	Settings_LED_PORT |= (1<<Settings_LED);		// Indicator of change finish.
    1570:	af 9a       	sbi	0x15, 7	; 21
	
	sei();				// Turn on Interrupt
    1572:	78 94       	sei
}
    1574:	ff 91       	pop	r31
    1576:	ef 91       	pop	r30
    1578:	df 91       	pop	r29
    157a:	cf 91       	pop	r28
    157c:	bf 91       	pop	r27
    157e:	af 91       	pop	r26
    1580:	9f 91       	pop	r25
    1582:	8f 91       	pop	r24
    1584:	7f 91       	pop	r23
    1586:	6f 91       	pop	r22
    1588:	5f 91       	pop	r21
    158a:	4f 91       	pop	r20
    158c:	3f 91       	pop	r19
    158e:	2f 91       	pop	r18
    1590:	0f 90       	pop	r0
    1592:	0b be       	out	0x3b, r0	; 59
    1594:	0f 90       	pop	r0
    1596:	0f be       	out	0x3f, r0	; 63
    1598:	0f 90       	pop	r0
    159a:	1f 90       	pop	r1
    159c:	18 95       	reti

0000159e <__vector_30>:
	}
}


ISR(USART1_RX_vect)
{
    159e:	1f 92       	push	r1
    15a0:	0f 92       	push	r0
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	0f 92       	push	r0
    15a6:	11 24       	eor	r1, r1
    15a8:	0b b6       	in	r0, 0x3b	; 59
    15aa:	0f 92       	push	r0
    15ac:	2f 93       	push	r18
    15ae:	3f 93       	push	r19
    15b0:	8f 93       	push	r24
    15b2:	9f 93       	push	r25
    15b4:	ef 93       	push	r30
    15b6:	ff 93       	push	r31
	TIMSK &= ~(1<< OCIE1B);
    15b8:	87 b7       	in	r24, 0x37	; 55
    15ba:	87 7f       	andi	r24, 0xF7	; 247
    15bc:	87 bf       	out	0x37, r24	; 55
	
	if (Outgoing_byte_count<500 & ((UCSR1A & (1<<RXC1))>0))
    15be:	80 91 57 01 	lds	r24, 0x0157
    15c2:	90 91 58 01 	lds	r25, 0x0158
    15c6:	30 91 9b 00 	lds	r19, 0x009B
    15ca:	23 2f       	mov	r18, r19
    15cc:	22 1f       	adc	r18, r18
    15ce:	22 27       	eor	r18, r18
    15d0:	22 1f       	adc	r18, r18
    15d2:	99 f0       	breq	.+38     	; 0x15fa <__vector_30+0x5c>
    15d4:	21 e0       	ldi	r18, 0x01	; 1
    15d6:	84 3f       	cpi	r24, 0xF4	; 244
    15d8:	31 e0       	ldi	r19, 0x01	; 1
    15da:	93 07       	cpc	r25, r19
    15dc:	08 f0       	brcs	.+2      	; 0x15e0 <__vector_30+0x42>
    15de:	20 e0       	ldi	r18, 0x00	; 0
    15e0:	22 23       	and	r18, r18
    15e2:	59 f0       	breq	.+22     	; 0x15fa <__vector_30+0x5c>
	{
		Serial_Data[Outgoing_byte_count] = UDR1;
    15e4:	20 91 9c 00 	lds	r18, 0x009C
    15e8:	fc 01       	movw	r30, r24
    15ea:	e3 5a       	subi	r30, 0xA3	; 163
    15ec:	fe 4f       	sbci	r31, 0xFE	; 254
    15ee:	20 83       	st	Z, r18
		Outgoing_byte_count++;
    15f0:	01 96       	adiw	r24, 0x01	; 1
    15f2:	90 93 58 01 	sts	0x0158, r25
    15f6:	80 93 57 01 	sts	0x0157, r24
	}
	
	TIMSK |= (1<< OCIE1B);
    15fa:	87 b7       	in	r24, 0x37	; 55
    15fc:	88 60       	ori	r24, 0x08	; 8
    15fe:	87 bf       	out	0x37, r24	; 55
    1600:	ff 91       	pop	r31
    1602:	ef 91       	pop	r30
    1604:	9f 91       	pop	r25
    1606:	8f 91       	pop	r24
    1608:	3f 91       	pop	r19
    160a:	2f 91       	pop	r18
    160c:	0f 90       	pop	r0
    160e:	0b be       	out	0x3b, r0	; 59
    1610:	0f 90       	pop	r0
    1612:	0f be       	out	0x3f, r0	; 63
    1614:	0f 90       	pop	r0
    1616:	1f 90       	pop	r1
    1618:	18 95       	reti

0000161a <eeprom_read_byte>:
    161a:	e1 99       	sbic	0x1c, 1	; 28
    161c:	fe cf       	rjmp	.-4      	; 0x161a <eeprom_read_byte>
    161e:	9f bb       	out	0x1f, r25	; 31
    1620:	8e bb       	out	0x1e, r24	; 30
    1622:	e0 9a       	sbi	0x1c, 0	; 28
    1624:	99 27       	eor	r25, r25
    1626:	8d b3       	in	r24, 0x1d	; 29
    1628:	08 95       	ret

0000162a <eeprom_write_byte>:
    162a:	26 2f       	mov	r18, r22

0000162c <eeprom_write_r18>:
    162c:	e1 99       	sbic	0x1c, 1	; 28
    162e:	fe cf       	rjmp	.-4      	; 0x162c <eeprom_write_r18>
    1630:	9f bb       	out	0x1f, r25	; 31
    1632:	8e bb       	out	0x1e, r24	; 30
    1634:	2d bb       	out	0x1d, r18	; 29
    1636:	0f b6       	in	r0, 0x3f	; 63
    1638:	f8 94       	cli
    163a:	e2 9a       	sbi	0x1c, 2	; 28
    163c:	e1 9a       	sbi	0x1c, 1	; 28
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	01 96       	adiw	r24, 0x01	; 1
    1642:	08 95       	ret

00001644 <_exit>:
    1644:	f8 94       	cli

00001646 <__stop_program>:
    1646:	ff cf       	rjmp	.-2      	; 0x1646 <__stop_program>
